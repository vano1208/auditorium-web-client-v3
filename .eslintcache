[{"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\index.tsx":"1","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\reportWebVitals.ts":"2","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\client.ts":"3","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\App.tsx":"4","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\classrooms.ts":"5","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\sidebar\\Sidebar.tsx":"6","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\schedule\\Schedule.tsx":"7","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\users\\Users.tsx":"8","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\login\\Login.tsx":"9","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\register\\Register.tsx":"10","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\users.ts":"11","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\register.ts":"12","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\helpers\\constants.ts":"13","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\helpers\\helpers.ts":"14","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\models\\models.ts":"15","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\login.ts":"16","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\register\\RegisterSkeleton.tsx":"17","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\button\\Button.tsx":"18","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\classroomsGrid\\filters\\Filters.tsx":"19","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\classroomsGrid\\caviar\\Caviar.tsx":"20","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\classroomsGrid\\popupClassroom\\PopupClassroom.tsx":"21","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\instrument\\Instrument.tsx":"22","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\classroomsGrid\\popupClassroom\\occupantRegistration\\OccupantRegistration.tsx":"23","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\tag\\Tag.tsx":"24","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\classroomSchedule\\ClassroomSchedule.tsx":"25","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\classroomsGrid\\popupClassroom\\occupationInfo\\OccupationInfo.tsx":"26","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\occupyClassroom.ts":"27","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\freeClassroom.ts":"28","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\user\\UserPopup.tsx":"29","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\profile\\Profile.tsx":"30","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\pageHeader\\PageHeader.tsx":"31","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\adminPanel\\AdminPanel.tsx":"32","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\classroomsGrid\\ClassroomsGrid.tsx":"33","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\classroomsGrid\\ClassroomsGridSkeleton.tsx":"34","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\classroomsGrid\\gridElement\\GridElementSkeleton.tsx":"35","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\classroomsGrid\\gridElement\\GridElement.tsx":"36","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\login\\registration\\Registration.tsx":"37","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\signUp.ts":"38","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\popupWindow\\PopupWindow.tsx":"39","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\loading\\Loading.tsx":"40","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\error\\Error.tsx":"41","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\degrees.ts":"42","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\departments.ts":"43"},{"size":748,"mtime":1608643761832,"results":"44","hashOfConfig":"45"},{"size":425,"mtime":499162500000,"results":"46","hashOfConfig":"45"},{"size":470,"mtime":1610314628809,"results":"47","hashOfConfig":"45"},{"size":3462,"mtime":1610744749525,"results":"48","hashOfConfig":"45"},{"size":766,"mtime":1610202635890,"results":"49","hashOfConfig":"45"},{"size":3074,"mtime":1609588557235,"results":"50","hashOfConfig":"45"},{"size":3945,"mtime":1610741134177,"results":"51","hashOfConfig":"45"},{"size":6584,"mtime":1610317364060,"results":"52","hashOfConfig":"45"},{"size":3658,"mtime":1610743658357,"results":"53","hashOfConfig":"45"},{"size":7964,"mtime":1610398224871,"results":"54","hashOfConfig":"45"},{"size":355,"mtime":1609093727921,"results":"55","hashOfConfig":"45"},{"size":560,"mtime":1610301444679,"results":"56","hashOfConfig":"45"},{"size":191,"mtime":1608928245188,"results":"57","hashOfConfig":"45"},{"size":1584,"mtime":1610229975014,"results":"58","hashOfConfig":"45"},{"size":2510,"mtime":1610734826565,"results":"59","hashOfConfig":"45"},{"size":517,"mtime":1609100490613,"results":"60","hashOfConfig":"45"},{"size":577,"mtime":1609694742314,"results":"61","hashOfConfig":"45"},{"size":503,"mtime":1610157609582,"results":"62","hashOfConfig":"45"},{"size":487,"mtime":1609587048875,"results":"63","hashOfConfig":"45"},{"size":989,"mtime":1609503686092,"results":"64","hashOfConfig":"45"},{"size":2564,"mtime":1610400982826,"results":"65","hashOfConfig":"45"},{"size":695,"mtime":1609504309227,"results":"66","hashOfConfig":"45"},{"size":8973,"mtime":1610742116079,"results":"67","hashOfConfig":"45"},{"size":244,"mtime":1609589754253,"results":"68","hashOfConfig":"45"},{"size":910,"mtime":1608928254118,"results":"69","hashOfConfig":"45"},{"size":3066,"mtime":1610301199368,"results":"70","hashOfConfig":"45"},{"size":847,"mtime":1610280818260,"results":"71","hashOfConfig":"45"},{"size":465,"mtime":1610301243756,"results":"72","hashOfConfig":"45"},{"size":971,"mtime":1610401141949,"results":"73","hashOfConfig":"45"},{"size":1222,"mtime":1610404905789,"results":"74","hashOfConfig":"45"},{"size":296,"mtime":1610316335028,"results":"75","hashOfConfig":"45"},{"size":287,"mtime":1610317841742,"results":"76","hashOfConfig":"45"},{"size":3355,"mtime":1610318074331,"results":"77","hashOfConfig":"45"},{"size":706,"mtime":1610318074256,"results":"78","hashOfConfig":"45"},{"size":471,"mtime":1609503809772,"results":"79","hashOfConfig":"45"},{"size":3694,"mtime":1610318074306,"results":"80","hashOfConfig":"45"},{"size":6473,"mtime":1610740355872,"results":"81","hashOfConfig":"45"},{"size":356,"mtime":1609100464962,"results":"82","hashOfConfig":"45"},{"size":873,"mtime":1610401141960,"results":"83","hashOfConfig":"45"},{"size":463,"mtime":1610742012063,"results":"84","hashOfConfig":"45"},{"size":157,"mtime":1610404629689,"results":"85","hashOfConfig":"45"},{"size":229,"mtime":1610723937608,"results":"86","hashOfConfig":"45"},{"size":182,"mtime":1610734622747,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"jcqp8",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"90"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"90"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\index.tsx",[],["188","189"],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\reportWebVitals.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\client.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\App.tsx",["190"],"import React from \"react\";\nimport styles from \"./App.module.css\";\nimport Sidebar from \"./components/sidebar/Sidebar\";\nimport homeIcon from \"./assets/menuIcons/home.png\";\nimport auditoriumsIcon from \"./assets/menuIcons/auditoriums.png\";\nimport registerIcon from \"./assets/menuIcons/register.png\";\nimport usersIcon from \"./assets/menuIcons/users.png\";\nimport administrationIcon from \"./assets/menuIcons/administration.png\";\nimport profileIcon from \"./assets/menuIcons/profile.png\";\nimport logoutIcon from \"./assets/menuIcons/logout.png\";\nimport scheduleIcon from \"./assets/menuIcons/schedule.png\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { GET_CLASSROOMS } from \"./api/operations/queries/classrooms\";\nimport { Classroom } from \"./models/models\";\nimport ClassroomsGrid from \"./components/classroomsGrid/ClassroomsGrid\";\nimport { Route } from \"react-router-dom\";\nimport Register from \"./components/register/Register\";\nimport Users from \"./components/users/Users\";\nimport Schedule from \"./components/schedule/Schedule\";\nimport ClassroomsGridSkeleton from \"./components/classroomsGrid/ClassroomsGridSkeleton\";\nimport Login from \"./components/login/Login\";\nimport Profile from \"./components/profile/Profile\";\nimport AdminPanel from \"./components/adminPanel/AdminPanel\";\n\nfunction App() {\n  const menuElements = [\n    {\n      text: \"Головна\",\n      path: \"/\",\n      icon: homeIcon,\n      exact: true,\n    },\n    {\n      text: \"Аудиторії\",\n      path: \"/auditoriums\",\n      icon: auditoriumsIcon,\n    },\n    {\n      text: \"Журнал\",\n      path: \"/register\",\n      icon: registerIcon,\n    },\n    {\n      text: \"Розклад\",\n      path: \"/schedule\",\n      icon: scheduleIcon,\n    },\n    {\n      text: \"Користувачі\",\n      path: \"/users\",\n      icon: usersIcon,\n    },\n    {\n      text: \"Адміністрування\",\n      path: \"/admin\",\n      icon: administrationIcon,\n    },\n    {\n      text: \"Профіль\",\n      path: \"/profile\",\n      icon: profileIcon,\n    },\n    {\n      text: \"Вийти\",\n      path: \"/logout\",\n      icon: logoutIcon,\n    },\n  ];\n  const { loading, data, error } = useQuery(GET_CLASSROOMS, {\n    variables: {\n      date: new Date().toString(),\n    },\n    fetchPolicy: \"network-only\",\n  });\n  let classrooms;\n  if (!loading && !error) {\n    classrooms = data.classrooms\n      .slice()\n      .sort((a: Classroom, b: Classroom) => Number(a.name) - Number(b.name));\n  }\n  const { data: dataLogged } = useQuery(gql`\n    query GetIsLogged {\n      isLogged @client\n    }\n  `);\n  // let isLogged = dataLogged.isLogged;\n  let isLogged = localStorage.getItem(\"userId\")!==null?true:false;\n  return (\n    <div className={styles.container}>\n      {isLogged && <Sidebar divider={[4, 9]} children={menuElements} />}\n      <main>\n        {!isLogged && <Login />}\n        <Route path=\"/auditoriums/:classroomId?\">\n          {!loading && !error ? (\n            <ClassroomsGrid classrooms={classrooms} />\n          ) : (\n            <ClassroomsGridSkeleton />\n          )}\n        </Route>\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n        <Route path=\"/users/:userId?\">\n          <Users />\n        </Route>\n        <Route path=\"/schedule\">\n          <Schedule />\n        </Route>\n        <Route path=\"/profile\">\n          <Profile />\n        </Route>\n        <Route path=\"/admin\">\n          <AdminPanel/>\n        </Route>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\classrooms.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\sidebar\\Sidebar.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\schedule\\Schedule.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\users\\Users.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\login\\Login.tsx",["191"],"import React, {useState} from \"react\";\r\nimport styles from \"./login.module.css\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport Button from \"../button/Button\";\r\nimport {useMutation} from \"@apollo/client\";\r\nimport {LOGIN} from \"../../api/operations/mutations/login\";\r\nimport {isLoggedVar} from \"../../api/client\";\r\nimport Registration from \"./registration/Registration\";\r\n\r\nconst Login = () => {\r\n  const [login] = useMutation(LOGIN);\r\n  const [visibility, setVisibility] = useState('none');\r\n  return (\r\n    <div className={styles.loginPage}>\r\n      <Registration visibility={visibility} onClose={() => setVisibility(\"none\")}/>\r\n      <div className={styles.form}>\r\n        <h1>AUDITORIUM</h1>\r\n        <a href=\"https://knmau.com.ua/\" target=\"_blank\" rel=\"noreferrer\">\r\n          Національна Музична Академія України ім. П.І. Чайковського\r\n        </a>\r\n        <Formik\r\n          initialValues={{email: \"\", password: \"\"}}\r\n          validate={(values) => {\r\n            const errors = {};\r\n            if (!values.email) {\r\n              // @ts-ignore\r\n              errors.email = \"Обов'язкове поле\";\r\n            } else if (\r\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n            ) {\r\n              // @ts-ignore\r\n              errors.email = \"Невірна email адреса\";\r\n            }\r\n            return errors;\r\n          }}\r\n          onSubmit={(values, {setSubmitting}) => {\r\n            login({\r\n              variables: {\r\n                input: {\r\n                  email: values.email,\r\n                  password: values.password,\r\n                },\r\n              },\r\n            }).then((r: any) => {\r\n              r.data.login.userErrors?.map((error: any) => {\r\n                  console.log(error.message);\r\n                  setSubmitting(false);\r\n                }\r\n              );\r\n              if (r.data.login.token !== null) {\r\n                localStorage.setItem(\"userId\", r.data.login.user.id);\r\n                setSubmitting(false);\r\n                isLoggedVar(true);\r\n              }\r\n            });\r\n          }}\r\n        >\r\n          {({isSubmitting, errors}) => (\r\n            <Form className={styles.inputForm}>\r\n              <ErrorMessage\r\n                className={styles.errorMessage}\r\n                name=\"email\"\r\n                component=\"div\"\r\n              />\r\n              <Field\r\n                placeholder=\"email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                className={\r\n                  errors.email === undefined\r\n                    ? styles.inputField\r\n                    : styles.errorField\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                className={styles.errorMessage}\r\n                name=\"password\"\r\n                component=\"div\"\r\n              />\r\n              <Field\r\n                placeholder=\"пароль\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                className={\r\n                  errors.password === undefined\r\n                    ? styles.inputField\r\n                    : styles.errorField\r\n                }\r\n              />\r\n              <div className={styles.buttons}>\r\n                <Button type=\"button\" onClick={() => setVisibility('block')}>Реєстрація</Button>\r\n                <Button type=\"submit\" disabled={isSubmitting}>\r\n                  Увійти\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\register\\Register.tsx",["192"],"import React, {useState} from \"react\";\r\nimport {useQuery} from \"@apollo/client\";\r\nimport {GET_REGISTER} from \"../../api/operations/queries/register\";\r\nimport {RegisterUnit, User} from \"../../models/models\";\r\nimport styles from \"./register.module.css\";\r\nimport Button from \"../button/Button\";\r\nimport RegisterSkeleton from \"./RegisterSkeleton\";\r\nimport {NavLink, useParams} from \"react-router-dom\";\r\nimport UserPopup from \"../user/UserPopup\";\r\nimport PageHeader from \"../pageHeader/PageHeader\";\r\n// @ts-ignore\r\nimport pdfMake from 'pdfmake/build/pdfmake';\r\n// @ts-ignore\r\nimport vfsFonts from 'pdfmake/build/vfs_fonts'\r\n\r\ninterface Params {\r\n  userId: string\r\n}\r\n\r\nconst Register: React.FC = () => {\r\n  const [registerDate, setRegisterDate] = useState(new Date());\r\n  const [registerUser, setRegisterUser] = useState({\r\n    id: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    patronymic: \"\",\r\n    department: \"\",\r\n    type: \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n    extraPhoneNumbers: \"\",\r\n    nameTemp: \"\"\r\n  } as User);\r\n  const [userSearch, setUserSearch] = useState(\"\");\r\n  const {userId} = useParams<Params>();\r\n  const [visibility, setVisibility] = useState(\"none\");\r\n  const {loading, error, data} = useQuery(GET_REGISTER, {\r\n    fetchPolicy: \"network-only\",\r\n    variables: {\r\n      date: new Date(registerDate).setHours(0, 0, 0, 0),\r\n    },\r\n  });\r\n  const toDateInputValue = (date: Date) => {\r\n    date.setMinutes(date.getMinutes() - date.getTimezoneOffset());\r\n    return date.toJSON().slice(0, 10);\r\n  };\r\n  const {vfs} = vfsFonts.pdfMake;\r\n  pdfMake.vfs = vfs;\r\n  const registerData = !loading && !error?data.register.map((unit: RegisterUnit)=> {\r\n    const start = new Date(unit.start).getHours() + \":\" + new Date(unit.start).getMinutes();\r\n    const end = unit.end !== null ? new Date(unit.end).getHours() +\r\n      \":\" + new Date(unit.end).getMinutes() : \"—\";\r\n    return [\r\n      {text: unit.classroom.name, alignment: 'center'},\r\n      {\r\n        text: unit.nameTemp === null ?\r\n          [unit.user.lastName, unit.user.firstName, unit.user.patronymic].join(\" \") : unit.nameTemp\r\n      },\r\n      {text:start, alignment: 'center'},\r\n      {text: end, alignment: 'center'}\r\n    ]\r\n  }):[];\r\n  const documentDefinition = {\r\n    pageSize: 'A4',\r\n    pageOrientation: 'portrait',\r\n    content: [\r\n      {\r\n        table: {\r\n          widths: [30, '*', 50, 50],\r\n          headerRows: 1,\r\n          dontBreakRows: true,\r\n          body: [\r\n            [{text: `Журнал відвідувань за ${[\r\n                registerDate.getDate(),\r\n                registerDate.getMonth() + 1,\r\n                registerDate.getFullYear()].join(\".\")}`,\r\n              style: 'header',\r\n              colSpan: 4,\r\n              alignment: 'center',\r\n              margin: [0, 10, 0, 10]\r\n            }, {}, {}, {}],\r\n            [\r\n              {text: 'Ауд.', style: 'tableHeader', alignment: 'center'},\r\n              {text: 'П.І.Б.', style: 'tableHeader'},\r\n              {text: 'Від', style: 'tableHeader', alignment: 'center'},\r\n              {text: 'До', style: 'tableHeader', alignment: 'center'},\r\n            ],\r\n            ...registerData,\r\n            [{text: \"П.І.Б. ___________________ Підпис ____________________\",\r\n              alignment: \"center\",\r\n              margin: [0, 10, 0, 10],\r\n              colSpan: 4},{}, {}, {}\r\n            ]\r\n          ]\r\n        }\r\n      }\r\n    ],\r\n    styles: {\r\n      tableHeader: {\r\n        bold: true,\r\n      },\r\n      header: {\r\n        fontSize: 18,\r\n        bold: true,\r\n      },\r\n      subheader: {\r\n        fontSize: 15,\r\n        bold: true\r\n      },\r\n      quote: {\r\n        italics: true\r\n      },\r\n      small: {\r\n        fontSize: 8\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <UserPopup onClose={() => setVisibility(\"none\")} visibility={visibility} userData={registerUser}/>\r\n      <PageHeader body=\"Журнал\">\r\n        <input className={styles.registerDateInput}\r\n               type=\"date\"\r\n               onChange={(e) => setRegisterDate(new Date(e.target.value))}\r\n               defaultValue={toDateInputValue(new Date())}\r\n        />\r\n        <div className={styles.registerControlPanel}>\r\n          <Button\r\n            onClick={() => {\r\n              pdfMake.createPdf(documentDefinition).print()\r\n            }\r\n            }\r\n          >\r\n            Роздрукувати\r\n          </Button>\r\n          <Button\r\n          onClick={() => {\r\n            pdfMake.createPdf(documentDefinition).download(`register_${[\r\n              registerDate.getDate(),\r\n              registerDate.getMonth() + 1,\r\n              registerDate.getFullYear()].join(\".\")}.pdf`);\r\n          }\r\n          }\r\n        >\r\n          Зберегти в PDF\r\n        </Button>\r\n        </div>\r\n      </PageHeader>\r\n      {loading || error ? (\r\n        <RegisterSkeleton/>\r\n      ) : (\r\n        <ul id=\"register\">\r\n          <li\r\n            className={[styles.registerUnitList, styles.listHeader].join(\" \")}\r\n          >\r\n            <div>Аудиторія</div>\r\n            <div>П.І.Б. {<input\r\n              className={styles.userSearch}\r\n              type=\"text\"\r\n              placeholder=\"Пошук (П.І.Б. або ауд.)\"\r\n              value={userSearch}\r\n              onChange={(e) => {\r\n                setUserSearch(e.target.value);\r\n              }}\r\n            />}</div>\r\n            <div>Від</div>\r\n            <div>До</div>\r\n          </li>\r\n          {data.register.length === 0 ? <li className={styles.noItemsInfo}>\r\n              {\"Записи в журналі за \" +\r\n              [registerDate.getDate(), registerDate.getMonth() + 1, registerDate.getFullYear()].join(\".\") +\r\n              \" відсутні!\"}\r\n            </li>\r\n            : data.register.filter((registerUnit: RegisterUnit) => {\r\n              return registerUnit.nameTemp === null\r\n                ? [\r\n                registerUnit.user.lastName,\r\n                registerUnit.user.firstName,\r\n                registerUnit.user.patronymic,\r\n                registerUnit.classroom.name].join(\" \").indexOf(userSearch) !== -1\r\n                : [registerUnit.nameTemp, registerUnit.classroom.name].join(\" \").indexOf(userSearch) !== -1\r\n            }).map((registerUnit: RegisterUnit) => (\r\n              <li key={registerUnit.id} className={styles.registerUnitList}>\r\n                <div>{registerUnit.classroom.name}</div>\r\n                <div>\r\n                  {registerUnit.nameTemp === null ? <NavLink\r\n                    className={styles.userLink}\r\n                    onClick={() => {\r\n                      setRegisterUser(registerUnit.user as User);\r\n                      setVisibility(\"block\");\r\n                    }}\r\n                    to={\"/register/\" + registerUnit.user.id}>{registerUnit.nameTemp === null\r\n                    ? [\r\n                      registerUnit.user.lastName,\r\n                      registerUnit.user.firstName,\r\n                      registerUnit.user.patronymic,\r\n                    ].join(\" \")\r\n                    : registerUnit.nameTemp}</NavLink> : registerUnit.nameTemp === null\r\n                    ? [\r\n                      registerUnit.user.lastName,\r\n                      registerUnit.user.firstName,\r\n                      registerUnit.user.patronymic,\r\n                    ].join(\" \")\r\n                    : registerUnit.nameTemp}\r\n\r\n                </div>\r\n                <div>\r\n                  {new Date(registerUnit.start).getHours() +\r\n                  \":\" +\r\n                  new Date(registerUnit.start).getMinutes()}\r\n                </div>\r\n                <div>\r\n                  {registerUnit.end !== null ? new Date(registerUnit.end).getHours() +\r\n                    \":\" +\r\n                    new Date(registerUnit.end).getMinutes() : \"—\"}\r\n                </div>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\users.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\register.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\helpers\\constants.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\helpers\\helpers.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\models\\models.ts",["193"],"import {string} from \"yup/es\";\r\n\r\nexport enum userTypes {\r\n  STUDENT = \"STUDENT\",\r\n  TEACHER = \"TEACHER\",\r\n  POST_GRADUATE = \"POST_GRADUATE\",\r\n  ADMINISTRATION = \"ADMINISTRATION\",\r\n  CONCERTMASTER = \"CONCERTMASTER\",\r\n  ILLUSTRATOR = \"ILLUSTRATOR\",\r\n  OTHER = \"OTHER\",\r\n}\r\n\r\nexport enum userTypesUa {\r\n  STUDENT = \"Студент\",\r\n  TEACHER = \"Викладач\",\r\n  POST_GRADUATE = \"Асистент/аспірант\",\r\n  ADMINISTRATION = \"Адміністрація\",\r\n  CONCERTMASTER = \"Концертмейстер\",\r\n  ILLUSTRATOR = \"Іллюстратор\",\r\n  OTHER = \"Не визначено\"\r\n}\r\n\r\nexport enum userTypeColors {\r\n  STUDENT = \"#1e2c4f\",\r\n  TEACHER = \"#ffa200\",\r\n  POST_GRADUATE = \"#1e2c4f\",\r\n  ADMINISTRATION = \"#ffa200\",\r\n  ILLUSTRATOR = \"#ffa200\",\r\n  CONCERTMASTER = \"#ffa200\",\r\n  OTHER = \"#ffa200\",\r\n}\r\n\r\nexport type User = {\r\n  id: string;\r\n  firstName: string;\r\n  patronymic: string | null;\r\n  lastName: string;\r\n  type: string;\r\n  department: string;\r\n  email: string;\r\n  phoneNumber: string;\r\n  extraPhoneNumbers: string | null;\r\n  nameTemp: string | null;\r\n};\r\n\r\nexport type OccupiedInfo = {\r\n  user: User;\r\n  until: Date;\r\n};\r\n\r\nexport type Comment = {\r\n  id: string;\r\n  user: User;\r\n  body: string;\r\n  date: Date;\r\n};\r\n\r\nexport type InstrumentType = {\r\n  id: string;\r\n  type: string;\r\n  name: string;\r\n  rate: number;\r\n  comments: Comment | null;\r\n  classroom: Classroom;\r\n};\r\n\r\nexport type DisabledInfo = {\r\n  comment: string;\r\n  until: Date;\r\n};\r\n\r\nexport type ScheduleUnit = {\r\n  id: string;\r\n  user: User;\r\n  classroom: Classroom;\r\n  dateStart: Date;\r\n  dateEnd: Date;\r\n  dayOfWeek: number;\r\n  from: string;\r\n  to: string;\r\n  activity: string;\r\n};\r\n\r\nexport type Classroom = {\r\n  id: string;\r\n  name: string;\r\n  chair: string | null;\r\n  special: string | null;\r\n  floor: number;\r\n  isWing: boolean;\r\n  isOperaStudio: boolean;\r\n  description: string | null;\r\n  occupied: OccupiedInfo | null;\r\n  instruments: Array<InstrumentType>;\r\n  disabled: DisabledInfo | null;\r\n  schedule: Array<ScheduleUnit>;\r\n};\r\n\r\nexport type RegisterUnit = {\r\n  id: string\r\n  user: {\r\n    lastName: string\r\n    firstName: string\r\n    patronymic: string\r\n    type: string\r\n    id: string\r\n    nameTemp: string\r\n  }\r\n  nameTemp: string\r\n  classroom: {\r\n    id: string\r\n    name: string\r\n}\r\n  start: string\r\n  end: string\r\n\r\n}\r\n\r\nexport type Degree = {\r\n  name: string\r\n  startMonth: number\r\n  startDay: number\r\n  durationMonth: number\r\n}\r\n\r\nexport type Department = {\r\n  id: string\r\n  name: string\r\n}","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\login.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\register\\RegisterSkeleton.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\button\\Button.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\classroomsGrid\\filters\\Filters.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\classroomsGrid\\caviar\\Caviar.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\classroomsGrid\\popupClassroom\\PopupClassroom.tsx",["194"],"import React, {useState} from \"react\";\r\nimport {Classroom, OccupiedInfo} from \"../../../models/models\";\r\nimport styles from \"./popupClassroom.module.css\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport Tag from \"../../tag/Tag\";\r\nimport ClassroomSchedule from \"../../classroomSchedule/ClassroomSchedule\";\r\nimport Instrument from \"../../instrument/Instrument\";\r\nimport OccupationInfo from \"./occupationInfo/OccupationInfo\";\r\nimport OccupantRegistration from \"./occupantRegistration/OccupantRegistration\";\r\nimport PopupWindow from \"../../popupWindow/PopupWindow\";\r\n\r\ninterface PropTypes {\r\n  classrooms: Array<Classroom>;\r\n  visibility: string;\r\n  onClose: (value: string) => void;\r\n  readyForRewriting: boolean;\r\n  setReadyForRewriting: (value: boolean) => void;\r\n}\r\n\r\ninterface ParamTypes {\r\n  classroomId: string;\r\n}\r\n\r\nconst PopupClassroom: React.FC<PropTypes> = (\r\n  {\r\n    classrooms,\r\n    visibility,\r\n    onClose,\r\n    readyForRewriting,\r\n    setReadyForRewriting\r\n  }) => {\r\n  let {classroomId} = useParams<ParamTypes>();\r\n  if (classroomId === undefined) classroomId = \"1\";\r\n  const classroom = classrooms.find(\r\n    (classroom) => classroom.name === classroomId\r\n  ) as Classroom;\r\n  const {name, chair, isWing, isOperaStudio, special, schedule, instruments, occupied} = classroom;\r\n  const headerBody = <>\r\n    {\"Аудиторія №\" +\r\n    name +\r\n    (chair !== null\r\n      ? \" — \" + chair\r\n      : \"\")}\r\n    {isWing ? <Tag text=\"Флігель\"/> : null}\r\n    {isOperaStudio ? <Tag text=\"Оперна студія\"/> : null}\r\n    {special ? <Tag text=\"Спеціалізована (ф-но)\"/> : null}\r\n  </>\r\n\r\n  return <PopupWindow headerBody={headerBody} onClose={onClose} visibility={visibility}>\r\n    <ClassroomSchedule schedule={schedule}/>\r\n    <div\r\n      className={\r\n        instruments.length !== 0 ? styles.instruments : \"\"\r\n      }\r\n    >\r\n      {instruments.map((instrument) => (\r\n        <Instrument\r\n          key={instrument.id}\r\n          withName\r\n          instrument={instrument}\r\n        />\r\n      ))}\r\n    </div>\r\n    {occupied ? readyForRewriting ? <OccupantRegistration\r\n      classroom={classroom}\r\n      onClose={onClose}\r\n    /> : (\r\n      <OccupationInfo\r\n        occupied={occupied as OccupiedInfo}\r\n        classroom={classroom}\r\n        onClose={onClose}\r\n        setReadyForRewriting={(value) => setReadyForRewriting(value)}\r\n      />\r\n    ) : (\r\n      <OccupantRegistration\r\n        classroom={classroom}\r\n        onClose={onClose}\r\n      />\r\n    )}\r\n  </PopupWindow>\r\n};\r\n\r\nexport default PopupClassroom;\r\n","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\instrument\\Instrument.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\classroomsGrid\\popupClassroom\\occupantRegistration\\OccupantRegistration.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\tag\\Tag.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\classroomSchedule\\ClassroomSchedule.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\classroomsGrid\\popupClassroom\\occupationInfo\\OccupationInfo.tsx",["195","196"],"import React, {useState} from \"react\";\r\nimport {\r\n  Classroom,\r\n  OccupiedInfo,\r\n  userTypeColors,\r\n  userTypes,\r\n  userTypesUa,\r\n} from \"../../../../models/models\";\r\nimport styles from \"./occupationInfo.module.css\";\r\nimport {getTimeHHMM} from \"../../../../helpers/helpers\";\r\nimport Button from \"../../../button/Button\";\r\nimport {useMutation} from \"@apollo/client\";\r\nimport {FREE_CLASSROOM} from \"../../../../api/operations/mutations/freeClassroom\";\r\nimport UserPopup from \"../../../user/UserPopup\";\r\n\r\ntype PropTypes = {\r\n  occupied: OccupiedInfo;\r\n  classroom: Classroom;\r\n  onClose: (value: string) => void;\r\n  setReadyForRewriting: (value: boolean) => void;\r\n};\r\n\r\nconst OccupationInfo: React.FC<PropTypes> = ({occupied, classroom, onClose, setReadyForRewriting}) => {\r\n  const [freeClassroom, {data, error}] = useMutation(FREE_CLASSROOM, {\r\n    variables: {\r\n      input: {\r\n        classroomName: String(classroom.name),\r\n      },\r\n    },\r\n    update(cache, {data}) {\r\n      cache.modify({\r\n        fields: {\r\n          classrooms(existingRelay, {toReference}) {\r\n            const freedClassroomIndex = existingRelay.findIndex(\r\n              (el: Classroom) => el.id === classroom.id\r\n            );\r\n\r\n            return existingRelay\r\n              .slice()\r\n              .splice(freedClassroomIndex, 1, {...classroom, occupied: data.freeClassroom.classroom.occupied});\r\n          },\r\n        },\r\n      });\r\n    },\r\n  });\r\n  const fullName =\r\n    occupied?.user.nameTemp === null\r\n      ? [\r\n        occupied?.user.lastName,\r\n        occupied?.user.firstName.charAt(0) + \".\",\r\n        occupied?.user.patronymic?.charAt(0) + \".\",\r\n      ].join(\" \")\r\n      : occupied?.user.nameTemp;\r\n  const [visibility, setVisibility] = useState(\"none\");\r\n  return (\r\n    <div>\r\n      <UserPopup visibility={visibility} onClose={() => setVisibility(\"none\")} userData={occupied?.user}/>\r\n      <div className={styles.occupationInfo}>\r\n        <Button\r\n          onClick={() => setVisibility(\"block\")}\r\n          style={{\r\n            backgroundColor: userTypeColors[occupied.user.type as userTypes],\r\n          }}\r\n        >\r\n          {[fullName, \"— \", userTypesUa[occupied.user.type as userTypes]].join(\r\n            \" \"\r\n          )}\r\n        </Button>\r\n        {(occupied.user.type === userTypes.STUDENT || occupied.user.type===userTypes.POST_GRADUATE)&&\r\n        <div className={styles.until}>\r\n          Зайнято до {getTimeHHMM(new Date(occupied.until))}\r\n        </div>}\r\n        <div className={styles.buttons}>\r\n          <Button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              setReadyForRewriting(true)\r\n            }}\r\n          >\r\n            Передати аудиторію\r\n          </Button>\r\n          <Button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              freeClassroom().then(() => onClose(\"none\"));\r\n            }}\r\n          >\r\n            Звільнити аудиторію\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OccupationInfo;\r\n","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\occupyClassroom.ts",[],["197","198"],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\freeClassroom.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\user\\UserPopup.tsx",["199"],"import React from \"react\";\r\nimport styles from \"./userPopup.module.css\";\r\nimport {User, userTypes, userTypesUa} from \"../../models/models\";\r\nimport PopupWindow from \"../popupWindow/PopupWindow\";\r\n\r\ninterface PropTypes {\r\n  visibility: string;\r\n  onClose: (value: string) => void;\r\n  userData: User;\r\n}\r\n\r\nconst UserPopup: React.FC<PropTypes> = ({visibility, onClose, userData}) => {\r\n  const {firstName, lastName, patronymic, type, department, phoneNumber, email, id} = userData;\r\n  const fullName = [lastName, firstName, patronymic].join(\" \");\r\n  const typeUa = userTypesUa[type as userTypes];\r\n\r\n  return <PopupWindow headerBody={[fullName, \"—\", typeUa].join(\" \")} onClose={onClose} visibility={visibility}>\r\n    <p>{department}</p>\r\n    <p>Номер користувача: {id}</p>\r\n    <p>Тел.: <a href={`tel:${phoneNumber}`}>{phoneNumber}</a></p>\r\n    <p>E-mail: <a href={`mailto:${email}`}>{email}</a></p>\r\n  </PopupWindow>\r\n};\r\n\r\nexport default UserPopup;\r\n","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\profile\\Profile.tsx",["200","201"],"import React from 'react';\r\nimport styles from './profile.module.css';\r\nimport PageHeader from \"../pageHeader/PageHeader\";\r\nimport {useQuery} from \"@apollo/client\";\r\nimport {GET_USERS} from \"../../api/operations/queries/users\";\r\nimport {User, userTypes, userTypesUa} from \"../../models/models\";\r\nimport Loading from \"../loading/Loading\";\r\nimport Error from \"../error/Error\";\r\n\r\nconst Profile: React.FC = () => {\r\n  const userId = '1';\r\n  // const userId = localStorage.getItem(\"userId\");\r\n  const {data, loading, error} = useQuery(GET_USERS);\r\n  if(loading) return <Loading/>\r\n  if(error) return <Error/>\r\n  const {\r\n    lastName,\r\n    firstName,\r\n    patronymic,\r\n    type,\r\n    email,\r\n    phoneNumber,\r\n    department,\r\n    id}: User = data.users.find((user:User)=>user.id===userId);\r\n\r\n  return <>\r\n    <PageHeader body=\"Особистий кабінет\"/>\r\n    <p>П.І.Б.: {[lastName, firstName, patronymic].join(\" \")}</p>\r\n    <p>Кафедра: {department}</p>\r\n    <p>Статус: {userTypesUa[type as userTypes]}</p>\r\n    <p>E-mail: <a href={`mailto:${email}`}>{email}</a></p>\r\n    <p>Тел: <a href={`tel:${phoneNumber}`}>{phoneNumber}</a></p>\r\n    <p>Курс: —</p>\r\n  </>\r\n}\r\n\r\nexport default Profile;","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\pageHeader\\PageHeader.tsx",["202"],"import React, {ReactFragment} from \"react\";\r\nimport styles from './header.module.css';\r\n\r\ninterface PropTypes {\r\n  body: string\r\n}\r\n\r\nconst PageHeader: React.FC<PropTypes> = ({body, children}) => {\r\n  return <div className={styles.header}>{[body, children]}</div>\r\n}\r\n\r\nexport default PageHeader;","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\adminPanel\\AdminPanel.tsx",["203"],"import React from 'react';\r\nimport styles from './adminPanel.module.css';\r\nimport PageHeader from \"../pageHeader/PageHeader\";\r\n\r\nconst AdminPanel: React.FC = () => {\r\n  return <>\r\n    <PageHeader body=\"Адміністрування\"></PageHeader>\r\n  </>\r\n}\r\n\r\nexport default AdminPanel;","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\classroomsGrid\\ClassroomsGrid.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\classroomsGrid\\ClassroomsGridSkeleton.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\classroomsGrid\\gridElement\\GridElementSkeleton.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\classroomsGrid\\gridElement\\GridElement.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\login\\registration\\Registration.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\signUp.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\popupWindow\\PopupWindow.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\loading\\Loading.tsx",["204"],"import React from \"react\";\r\nimport musicNotesIcon from './../../assets/musicNotes.svg';\r\nimport styles from './loading.module.css';\r\n\r\ninterface PropTypes {\r\n\r\n}\r\n\r\nconst Loading: React.FC<PropTypes> = ({}) => {\r\n  return <div><img src={musicNotesIcon} alt=\"loading\" className={styles.heartbeat}/>\r\n  <h2 className={styles.loadingMessage}>Завантаження даних. Будь ласка, зачекайте...</h2>\r\n  </div>\r\n}\r\n\r\nexport default Loading;","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\error\\Error.tsx",["205"],"import React from \"react\";\r\n\r\ninterface PropTypes {\r\n\r\n}\r\n\r\nconst Error: React.FC<PropTypes> = ({}) => {\r\n  return <h1>Error</h1>\r\n}\r\n\r\nexport default Error;","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\degrees.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\departments.ts",[],{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":81,"column":17,"nodeType":"212","messageId":"213","endLine":81,"endColumn":27},{"ruleId":"214","severity":1,"message":"215","line":45,"column":57,"nodeType":"216","messageId":"217","endLine":45,"endColumn":59},{"ruleId":"210","severity":1,"message":"218","line":35,"column":10,"nodeType":"212","messageId":"213","endLine":35,"endColumn":16},{"ruleId":"210","severity":1,"message":"219","line":1,"column":9,"nodeType":"212","messageId":"213","endLine":1,"endColumn":15},{"ruleId":"210","severity":1,"message":"220","line":1,"column":16,"nodeType":"212","messageId":"213","endLine":1,"endColumn":24},{"ruleId":"210","severity":1,"message":"221","line":24,"column":26,"nodeType":"212","messageId":"213","endLine":24,"endColumn":30},{"ruleId":"210","severity":1,"message":"222","line":24,"column":32,"nodeType":"212","messageId":"213","endLine":24,"endColumn":37},{"ruleId":"206","replacedBy":"223"},{"ruleId":"208","replacedBy":"224"},{"ruleId":"210","severity":1,"message":"225","line":2,"column":8,"nodeType":"212","messageId":"213","endLine":2,"endColumn":14},{"ruleId":"210","severity":1,"message":"225","line":2,"column":8,"nodeType":"212","messageId":"213","endLine":2,"endColumn":14},{"ruleId":"210","severity":1,"message":"226","line":24,"column":5,"nodeType":"212","messageId":"213","endLine":24,"endColumn":7},{"ruleId":"210","severity":1,"message":"227","line":1,"column":16,"nodeType":"212","messageId":"213","endLine":1,"endColumn":29},{"ruleId":"210","severity":1,"message":"225","line":2,"column":8,"nodeType":"212","messageId":"213","endLine":2,"endColumn":14},{"ruleId":"228","severity":1,"message":"229","line":9,"column":39,"nodeType":"230","messageId":"231","endLine":9,"endColumn":41},{"ruleId":"228","severity":1,"message":"229","line":7,"column":37,"nodeType":"230","messageId":"231","endLine":7,"endColumn":39},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"@typescript-eslint/no-unused-vars","'dataLogged' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'userId' is assigned a value but never used.","'string' is defined but never used.","'useState' is defined but never used.","'data' is assigned a value but never used.","'error' is assigned a value but never used.",["232"],["233"],"'styles' is defined but never used.","'id' is assigned a value but never used.","'ReactFragment' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]