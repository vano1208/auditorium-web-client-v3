[{"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\index.tsx":"1","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\reportWebVitals.ts":"2","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\client.ts":"3","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\App.tsx":"4","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\classrooms.ts":"5","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\sidebar\\Sidebar.tsx":"6","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\users.ts":"7","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\register.ts":"8","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\helpers\\constants.ts":"9","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\helpers\\helpers.ts":"10","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\models\\models.ts":"11","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\login.ts":"12","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\button\\Button.tsx":"13","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\instrument\\Instrument.tsx":"14","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\tag\\Tag.tsx":"15","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\classroomSchedule\\ClassroomSchedule.tsx":"16","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\occupyClassroom.ts":"17","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\freeClassroom.ts":"18","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\user\\UserPopup.tsx":"19","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\pageHeader\\PageHeader.tsx":"20","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\adminPanel\\AdminPanel.tsx":"21","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\signUp.ts":"22","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\popupWindow\\PopupWindow.tsx":"23","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\loading\\Loading.tsx":"24","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\error\\Error.tsx":"25","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\degrees.ts":"26","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\departments.ts":"27","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\users\\Users.tsx":"28","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\schedule\\Schedule.tsx":"29","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\register\\Register.tsx":"30","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\profile\\Profile.tsx":"31","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\login\\Login.tsx":"32","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\home\\Home.tsx":"33","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\register\\RegisterSkeleton.tsx":"34","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\registration\\Registration.tsx":"35","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\gridElement\\GridElement.tsx":"36","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\filters\\Filters.tsx":"37","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\gridElement\\GridElementSkeleton.tsx":"38","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\caviar\\Caviar.tsx":"39","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\popupClassroom\\PopupClassroom.tsx":"40","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\popupClassroom\\occupationInfo\\OccupationInfo.tsx":"41","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\popupClassroom\\occupantRegistration\\OccupantRegistration.tsx":"42","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\classrooms\\ClassroomGridConrainer.tsx":"43","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\classrooms\\ClassroomsGrid.tsx":"44","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\classrooms\\ClassroomsGridSkeleton.tsx":"45","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\alert\\Alert.tsx":"46"},{"size":748,"mtime":1610801515415,"results":"47","hashOfConfig":"48"},{"size":425,"mtime":499162500000,"results":"49","hashOfConfig":"48"},{"size":627,"mtime":1610807881135,"results":"50","hashOfConfig":"48"},{"size":2780,"mtime":1610893114358,"results":"51","hashOfConfig":"48"},{"size":766,"mtime":1610818270872,"results":"52","hashOfConfig":"48"},{"size":3074,"mtime":1609588557235,"results":"53","hashOfConfig":"48"},{"size":565,"mtime":1610884863392,"results":"54","hashOfConfig":"48"},{"size":560,"mtime":1610301444679,"results":"55","hashOfConfig":"48"},{"size":191,"mtime":1608928245188,"results":"56","hashOfConfig":"48"},{"size":1695,"mtime":1610814084416,"results":"57","hashOfConfig":"48"},{"size":2785,"mtime":1610897561934,"results":"58","hashOfConfig":"48"},{"size":517,"mtime":1609100490613,"results":"59","hashOfConfig":"48"},{"size":503,"mtime":1610157609582,"results":"60","hashOfConfig":"48"},{"size":695,"mtime":1609504309227,"results":"61","hashOfConfig":"48"},{"size":244,"mtime":1609589754253,"results":"62","hashOfConfig":"48"},{"size":910,"mtime":1608928254118,"results":"63","hashOfConfig":"48"},{"size":847,"mtime":1610280818260,"results":"64","hashOfConfig":"48"},{"size":465,"mtime":1610301243756,"results":"65","hashOfConfig":"48"},{"size":971,"mtime":1610401141949,"results":"66","hashOfConfig":"48"},{"size":296,"mtime":1610316335028,"results":"67","hashOfConfig":"48"},{"size":287,"mtime":1610317841742,"results":"68","hashOfConfig":"48"},{"size":356,"mtime":1609100464962,"results":"69","hashOfConfig":"48"},{"size":873,"mtime":1610401141960,"results":"70","hashOfConfig":"48"},{"size":463,"mtime":1610742012063,"results":"71","hashOfConfig":"48"},{"size":458,"mtime":1610823933611,"results":"72","hashOfConfig":"48"},{"size":229,"mtime":1610723937608,"results":"73","hashOfConfig":"48"},{"size":182,"mtime":1610734622747,"results":"74","hashOfConfig":"48"},{"size":6708,"mtime":1610892900370,"results":"75","hashOfConfig":"48"},{"size":4864,"mtime":1610833392061,"results":"76","hashOfConfig":"48"},{"size":7931,"mtime":1610833519086,"results":"77","hashOfConfig":"48"},{"size":1897,"mtime":1610826427804,"results":"78","hashOfConfig":"48"},{"size":4650,"mtime":1610900464576,"results":"79","hashOfConfig":"48"},{"size":137,"mtime":1610794169463,"results":"80","hashOfConfig":"48"},{"size":577,"mtime":1609694742314,"results":"81","hashOfConfig":"48"},{"size":7793,"mtime":1610892377218,"results":"82","hashOfConfig":"48"},{"size":3797,"mtime":1610822686421,"results":"83","hashOfConfig":"48"},{"size":487,"mtime":1609587048875,"results":"84","hashOfConfig":"48"},{"size":471,"mtime":1609503809772,"results":"85","hashOfConfig":"48"},{"size":986,"mtime":1610822686369,"results":"86","hashOfConfig":"48"},{"size":2654,"mtime":1610822686408,"results":"87","hashOfConfig":"48"},{"size":3179,"mtime":1610822686302,"results":"88","hashOfConfig":"48"},{"size":9083,"mtime":1610883352613,"results":"89","hashOfConfig":"48"},{"size":2626,"mtime":1610833559321,"results":"90","hashOfConfig":"48"},{"size":3276,"mtime":1610822686381,"results":"91","hashOfConfig":"48"},{"size":663,"mtime":1610822686395,"results":"92","hashOfConfig":"48"},{"size":549,"mtime":1610900530852,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"jcqp8",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"96"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"96"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"96"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"96"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"96"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"96"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"96"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\index.tsx",[],["199","200"],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\reportWebVitals.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\client.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\App.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\classrooms.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\sidebar\\Sidebar.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\users.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\register.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\helpers\\constants.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\helpers\\helpers.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\models\\models.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\login.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\button\\Button.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\instrument\\Instrument.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\tag\\Tag.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\classroomSchedule\\ClassroomSchedule.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\occupyClassroom.ts",[],["201","202"],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\freeClassroom.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\user\\UserPopup.tsx",["203"],"import React from \"react\";\r\nimport styles from \"./userPopup.module.css\";\r\nimport {User, userTypes, userTypesUa} from \"../../models/models\";\r\nimport PopupWindow from \"../popupWindow/PopupWindow\";\r\n\r\ninterface PropTypes {\r\n  visibility: string;\r\n  onClose: (value: string) => void;\r\n  userData: User;\r\n}\r\n\r\nconst UserPopup: React.FC<PropTypes> = ({visibility, onClose, userData}) => {\r\n  const {firstName, lastName, patronymic, type, department, phoneNumber, email, id} = userData;\r\n  const fullName = [lastName, firstName, patronymic].join(\" \");\r\n  const typeUa = userTypesUa[type as userTypes];\r\n\r\n  return <PopupWindow headerBody={[fullName, \"—\", typeUa].join(\" \")} onClose={onClose} visibility={visibility}>\r\n    <p>{department}</p>\r\n    <p>Номер користувача: {id}</p>\r\n    <p>Тел.: <a href={`tel:${phoneNumber}`}>{phoneNumber}</a></p>\r\n    <p>E-mail: <a href={`mailto:${email}`}>{email}</a></p>\r\n  </PopupWindow>\r\n};\r\n\r\nexport default UserPopup;\r\n","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\pageHeader\\PageHeader.tsx",["204"],"import React, {ReactFragment} from \"react\";\r\nimport styles from './header.module.css';\r\n\r\ninterface PropTypes {\r\n  body: string\r\n}\r\n\r\nconst PageHeader: React.FC<PropTypes> = ({body, children}) => {\r\n  return <div className={styles.header}>{[body, children]}</div>\r\n}\r\n\r\nexport default PageHeader;","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\adminPanel\\AdminPanel.tsx",["205"],"import React from 'react';\r\nimport styles from './adminPanel.module.css';\r\nimport PageHeader from \"../pageHeader/PageHeader\";\r\n\r\nconst AdminPanel: React.FC = () => {\r\n  return <>\r\n    <PageHeader body=\"Адміністрування\"></PageHeader>\r\n  </>\r\n}\r\n\r\nexport default AdminPanel;","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\signUp.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\popupWindow\\PopupWindow.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\loading\\Loading.tsx",["206"],"import React from \"react\";\r\nimport musicNotesIcon from './../../assets/musicNotes.svg';\r\nimport styles from './loading.module.css';\r\n\r\ninterface PropTypes {\r\n\r\n}\r\n\r\nconst Loading: React.FC<PropTypes> = ({}) => {\r\n  return <div><img src={musicNotesIcon} alt=\"loading\" className={styles.heartbeat}/>\r\n  <h2 className={styles.loadingMessage}>Завантаження даних. Будь ласка, зачекайте...</h2>\r\n  </div>\r\n}\r\n\r\nexport default Loading;","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\error\\Error.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\degrees.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\departments.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\users\\Users.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\schedule\\Schedule.tsx",["207"],"import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./schedule.module.css\";\r\nimport {getScheduleTimeline} from \"../../helpers/helpers\";\r\nimport {WORKING_DAY_END, WORKING_DAY_START} from \"../../helpers/constants\";\r\nimport {gql, useQuery} from \"@apollo/client\";\r\nimport {GET_CLASSROOMS} from \"../../api/operations/queries/classrooms\";\r\nimport {Classroom, ScheduleUnit} from \"../../models/models\";\r\nimport PageHeader from \"../../components/pageHeader/PageHeader\";\r\nimport Loading from \"../../components/loading/Loading\";\r\nimport {client} from \"../../api/client\";\r\n\r\nconst Schedule = () => {\r\n  const [classrooms, setClassrooms] = useState<Array<Classroom>>();\r\n  const [scheduleDate, setScheduleDate] = useState(new Date());\r\n  const timelineMarks = [\"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\",\r\n    \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\"];\r\n  const toDateInputValue = (date: Date) => {\r\n    date.setMinutes(date.getMinutes() - date.getTimezoneOffset());\r\n    return date.toJSON().slice(0, 10);\r\n  };\r\n  const {data: gridUpdate} = useQuery(gql`\r\n      query gridUpdate {\r\n          gridUpdate @client\r\n      }\r\n  `);\r\n\r\n  useEffect(() => {\r\n    getClassrooms()\r\n  }, [gridUpdate]);\r\n\r\n  const getClassrooms = async () => {\r\n    const {data: {classrooms}} = await client.query({\r\n      query: GET_CLASSROOMS,\r\n      variables: {\r\n        date: new Date(scheduleDate).setHours(0, 0, 0, 0),\r\n      },\r\n      fetchPolicy: 'cache-first'\r\n    });\r\n    setClassrooms(classrooms.slice()\r\n      .sort((a: Classroom, b: Classroom) => Number(a.name) - Number(b.name)));\r\n  };\r\n  let timeSnippets: string[] = getScheduleTimeline(\r\n    WORKING_DAY_START,\r\n    WORKING_DAY_END\r\n  );\r\n  return (\r\n    <>\r\n      <PageHeader body=\"Розклад\">\r\n        <input className={styles.scheduleDateInput}\r\n               type=\"date\"\r\n               onChange={(e) => setScheduleDate(new Date(e.target.value))}\r\n               defaultValue={toDateInputValue(new Date())}\r\n        />\r\n      </PageHeader>\r\n      {classrooms!==undefined?<div className={styles.scheduleTable}>\r\n        <table className={styles.tg}>\r\n          <thead>\r\n          <tr>\r\n            <th></th>\r\n            {timeSnippets.map((el: any) => (\r\n              <th className={styles.tg_0pky}>\r\n                {timelineMarks.map(mark => el === mark ? el : null)}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          {(classrooms as Array<Classroom>).map((cl: any) => {\r\n            let tempArray = timeSnippets;\r\n            cl.schedule.map((scheduleUnit: any) => {\r\n              let unitFrom = timeSnippets.findIndex(\r\n                (el: string) => el === scheduleUnit.from\r\n              );\r\n              let unitTo = timeSnippets.findIndex(\r\n                (el: string) => el === scheduleUnit.to\r\n              );\r\n              tempArray.fill(\"del\", unitFrom + 1, unitTo);\r\n              return null;\r\n            });\r\n            return (\r\n              <tr className={styles.classroomRow}>\r\n                <td className={styles.classroomName}>{cl.name}</td>\r\n                {tempArray.map((el: any) => {\r\n                  let colSpanNum = cl.schedule.map(\r\n                    (scheduleUnit: ScheduleUnit) => {\r\n                      let from = timeSnippets.indexOf(scheduleUnit.from);\r\n                      let to = timeSnippets.indexOf(scheduleUnit.to);\r\n                      let term = to - from;\r\n                      if (scheduleUnit.from === el) {\r\n                        return term.toString();\r\n                      } else {\r\n                        return null;\r\n                      }\r\n                    }\r\n                  );\r\n                  return el !== \"del\" ? (\r\n                    <td\r\n                      className={styles.tg_0lax}\r\n                      colSpan={colSpanNum.join().replace(\",\", \"\")}\r\n                    >\r\n                      {cl.schedule.map((scheduleUnit: ScheduleUnit) => {\r\n                        if (scheduleUnit.from === el) {\r\n                          return (\r\n                            <div className={styles.occupied}>\r\n                              <p>\r\n                                {scheduleUnit.user.lastName +\r\n                                \" \" +\r\n                                scheduleUnit.from +\r\n                                \" — \" +\r\n                                scheduleUnit.to}\r\n                              </p>\r\n                            </div>\r\n                          );\r\n                        }\r\n                        return null;\r\n                      })}\r\n                    </td>\r\n                  ) : null;\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n          </tbody>\r\n        </table>\r\n      </div>:<Loading/>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Schedule;\r\n","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\register\\Register.tsx",["208","209"],"import React, {useState} from \"react\";\r\nimport {useQuery} from \"@apollo/client\";\r\nimport {GET_REGISTER} from \"../../api/operations/queries/register\";\r\nimport {RegisterUnit, User} from \"../../models/models\";\r\nimport styles from \"./register.module.css\";\r\nimport Button from \"../../components/button/Button\";\r\nimport RegisterSkeleton from \"./RegisterSkeleton\";\r\nimport {NavLink, useParams} from \"react-router-dom\";\r\nimport UserPopup from \"../../components/user/UserPopup\";\r\nimport PageHeader from \"../../components/pageHeader/PageHeader\";\r\n// @ts-ignore\r\nimport pdfMake from 'pdfmake/build/pdfmake';\r\n// @ts-ignore\r\nimport vfsFonts from 'pdfmake/build/vfs_fonts'\r\n\r\ninterface Params {\r\n  userId: string\r\n}\r\n\r\nconst Register: React.FC = () => {\r\n  const [registerDate, setRegisterDate] = useState(new Date());\r\n  const [registerUser, setRegisterUser] = useState({\r\n    id: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    patronymic: \"\",\r\n    department: \"\",\r\n    type: \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n    extraPhoneNumbers: \"\",\r\n    nameTemp: \"\"\r\n  } as User);\r\n  const [userSearch, setUserSearch] = useState(\"\");\r\n  const [visibility, setVisibility] = useState(\"none\");\r\n  const {loading, error, data} = useQuery(GET_REGISTER, {\r\n    variables: {\r\n      date: new Date(registerDate).setHours(0, 0, 0, 0),\r\n    },\r\n  });\r\n  const toDateInputValue = (date: Date) => {\r\n    date.setMinutes(date.getMinutes() - date.getTimezoneOffset());\r\n    return date.toJSON().slice(0, 10);\r\n  };\r\n  const {vfs} = vfsFonts.pdfMake;\r\n  pdfMake.vfs = vfs;\r\n  const registerData = !loading && !error?data.register.map((unit: RegisterUnit)=> {\r\n    const start = new Date(unit.start).getHours() + \":\" + new Date(unit.start).getMinutes();\r\n    const end = unit.end !== null ? new Date(unit.end).getHours() +\r\n      \":\" + new Date(unit.end).getMinutes() : \"—\";\r\n    return [\r\n      {text: unit.classroom.name, alignment: 'center'},\r\n      {\r\n        text: unit.nameTemp === null ?\r\n          [unit.user.lastName, unit.user.firstName, unit.user.patronymic].join(\" \") : unit.nameTemp\r\n      },\r\n      {text:start, alignment: 'center'},\r\n      {text: end, alignment: 'center'}\r\n    ]\r\n  }):[];\r\n  const documentDefinition = {\r\n    pageSize: 'A4',\r\n    pageOrientation: 'portrait',\r\n    content: [\r\n      {\r\n        table: {\r\n          widths: [30, '*', 50, 50],\r\n          headerRows: 1,\r\n          dontBreakRows: true,\r\n          body: [\r\n            [{text: `Журнал відвідувань за ${[\r\n                registerDate.getDate(),\r\n                registerDate.getMonth() + 1,\r\n                registerDate.getFullYear()].join(\".\")}`,\r\n              style: 'header',\r\n              colSpan: 4,\r\n              alignment: 'center',\r\n              margin: [0, 10, 0, 10]\r\n            }, {}, {}, {}],\r\n            [\r\n              {text: 'Ауд.', style: 'tableHeader', alignment: 'center'},\r\n              {text: 'П.І.Б.', style: 'tableHeader'},\r\n              {text: 'Від', style: 'tableHeader', alignment: 'center'},\r\n              {text: 'До', style: 'tableHeader', alignment: 'center'},\r\n            ],\r\n            ...registerData,\r\n            [{text: \"П.І.Б. ___________________ Підпис ____________________\",\r\n              alignment: \"center\",\r\n              margin: [0, 10, 0, 10],\r\n              colSpan: 4},{}, {}, {}\r\n            ]\r\n          ]\r\n        }\r\n      }\r\n    ],\r\n    styles: {\r\n      tableHeader: {\r\n        bold: true,\r\n      },\r\n      header: {\r\n        fontSize: 18,\r\n        bold: true,\r\n      },\r\n      subheader: {\r\n        fontSize: 15,\r\n        bold: true\r\n      },\r\n      quote: {\r\n        italics: true\r\n      },\r\n      small: {\r\n        fontSize: 8\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <UserPopup onClose={() => setVisibility(\"none\")} visibility={visibility} userData={registerUser}/>\r\n      <PageHeader body=\"Журнал\">\r\n        <input className={styles.registerDateInput}\r\n               type=\"date\"\r\n               onChange={(e) => setRegisterDate(new Date(e.target.value))}\r\n               defaultValue={toDateInputValue(new Date())}\r\n        />\r\n        <div className={styles.registerControlPanel}>\r\n          <Button\r\n            onClick={() => {\r\n              pdfMake.createPdf(documentDefinition).print()\r\n            }\r\n            }\r\n          >\r\n            Роздрукувати\r\n          </Button>\r\n          <Button\r\n          onClick={() => {\r\n            pdfMake.createPdf(documentDefinition).download(`register_${[\r\n              registerDate.getDate(),\r\n              registerDate.getMonth() + 1,\r\n              registerDate.getFullYear()].join(\".\")}.pdf`);\r\n          }\r\n          }\r\n        >\r\n          Зберегти в PDF\r\n        </Button>\r\n        </div>\r\n      </PageHeader>\r\n      {loading || error ? (\r\n        <RegisterSkeleton/>\r\n      ) : (\r\n        <ul id=\"register\">\r\n          <li\r\n            className={[styles.registerUnitList, styles.listHeader].join(\" \")}\r\n          >\r\n            <div>Аудиторія</div>\r\n            <div>П.І.Б. {<input\r\n              className={styles.userSearch}\r\n              type=\"text\"\r\n              placeholder=\"Пошук (П.І.Б. або ауд.)\"\r\n              value={userSearch}\r\n              onChange={(e) => {\r\n                setUserSearch(e.target.value);\r\n              }}\r\n            />}</div>\r\n            <div>Від</div>\r\n            <div>До</div>\r\n          </li>\r\n          {data.register.length === 0 ? <li className={styles.noItemsInfo}>\r\n              {\"Записи в журналі за \" +\r\n              [registerDate.getDate(), registerDate.getMonth() + 1, registerDate.getFullYear()].join(\".\") +\r\n              \" відсутні!\"}\r\n            </li>\r\n            : data.register.filter((registerUnit: RegisterUnit) => {\r\n              return registerUnit.nameTemp === null\r\n                ? [\r\n                registerUnit.user.lastName,\r\n                registerUnit.user.firstName,\r\n                registerUnit.user.patronymic,\r\n                registerUnit.classroom.name].join(\" \").indexOf(userSearch) !== -1\r\n                : [registerUnit.nameTemp, registerUnit.classroom.name].join(\" \").indexOf(userSearch) !== -1\r\n            }).map((registerUnit: RegisterUnit) => (\r\n              <li key={registerUnit.id} className={styles.registerUnitList}>\r\n                <div>{registerUnit.classroom.name}</div>\r\n                <div>\r\n                  {registerUnit.nameTemp === null ? <NavLink\r\n                    className={styles.userLink}\r\n                    onClick={() => {\r\n                      setRegisterUser(registerUnit.user as User);\r\n                      setVisibility(\"block\");\r\n                    }}\r\n                    to={\"/register/\" + registerUnit.user.id}>{registerUnit.nameTemp === null\r\n                    ? [\r\n                      registerUnit.user.lastName,\r\n                      registerUnit.user.firstName,\r\n                      registerUnit.user.patronymic,\r\n                    ].join(\" \")\r\n                    : registerUnit.nameTemp}</NavLink> : registerUnit.nameTemp === null\r\n                    ? [\r\n                      registerUnit.user.lastName,\r\n                      registerUnit.user.firstName,\r\n                      registerUnit.user.patronymic,\r\n                    ].join(\" \")\r\n                    : registerUnit.nameTemp}\r\n\r\n                </div>\r\n                <div>\r\n                  {new Date(registerUnit.start).getHours() +\r\n                  \":\" +\r\n                  new Date(registerUnit.start).getMinutes()}\r\n                </div>\r\n                <div>\r\n                  {registerUnit.end !== null ? new Date(registerUnit.end).getHours() +\r\n                    \":\" +\r\n                    new Date(registerUnit.end).getMinutes() : \"—\"}\r\n                </div>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\profile\\Profile.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\login\\Login.tsx",["210"],"import React, {useState} from \"react\";\r\nimport styles from \"./login.module.css\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport Button from \"../../components/button/Button\";\r\nimport {useMutation} from \"@apollo/client\";\r\nimport {LOGIN} from \"../../api/operations/mutations/login\";\r\nimport {isLoggedVar} from \"../../api/client\";\r\nimport Registration from \"../../components/registration/Registration\";\r\nimport Alert from \"../../components/alert/Alert\";\r\nimport {errorCodes, errorCodesUa} from \"../../models/models\";\r\n\r\ninterface PT {\r\n  setIsLogged: (value: boolean) => void;\r\n}\r\n\r\nconst Login: React.FC<PT> = ({setIsLogged}) => {\r\n  const [login] = useMutation(LOGIN);\r\n  const [visibility, setVisibility] = useState('none');\r\n  let alertIndex = 0;\r\n  const [alerts, setAlerts] = useState<Array<any>>([]);\r\n  return (\r\n    <div className={styles.loginPage}>\r\n      {alerts.map(({errorMessage}, index) => <Alert positionTop={60 * index + 16} body={errorMessage}/>)}\r\n      <Registration setIsLogged={setIsLogged} visibility={visibility} onClose={() => setVisibility(\"none\")}/>\r\n      <div className={styles.form}>\r\n        <h1>AUDITORIUM</h1>\r\n        <a href=\"https://knmau.com.ua/\" target=\"_blank\" rel=\"noreferrer\">\r\n          Національна Музична Академія України ім. П.І. Чайковського\r\n        </a>\r\n        <Formik\r\n          initialValues={{email: \"\", password: \"\"}}\r\n          validate={(values) => {\r\n            const errors = {};\r\n            if (!values.email) {\r\n              // @ts-ignore\r\n              errors.email = \"Обов'язкове поле\";\r\n            } else if (\r\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n            ) {\r\n              // @ts-ignore\r\n              errors.email = \"Невірна email адреса\";\r\n            }\r\n            return errors;\r\n          }}\r\n          onSubmit={(values, {setSubmitting}) => {\r\n            login({\r\n              variables: {\r\n                input: {\r\n                  email: values.email,\r\n                  password: values.password,\r\n                },\r\n              },\r\n            }).then((r: any) => {\r\n              r.data.login.userErrors?.map((error: any) => {\r\n                  if (alerts.length === 0 || (alerts.findIndex((alert: any) => alert.errorMessage === errorCodesUa[error.code as errorCodes]) === -1)) {\r\n                    setAlerts((prevState => [...prevState, {\r\n                      errorMessage: errorCodesUa[error.code as errorCodes],\r\n                      key: alertIndex\r\n                    }]))\r\n                    let removedItem = alerts.findIndex((item) => item.key === alertIndex++);\r\n                    setTimeout(() => setAlerts([...alerts.splice(removedItem, 1)]), 3000);\r\n                  }\r\n                  setSubmitting(false);\r\n                }\r\n              );\r\n              if (r.data.login.token) {\r\n                sessionStorage.setItem(\"userId\", r.data.login.user.id);\r\n                setSubmitting(false);\r\n                isLoggedVar(true);\r\n                setIsLogged(true)\r\n              }\r\n            });\r\n          }}\r\n        >\r\n          {({isSubmitting, errors}) => (\r\n            <Form className={styles.inputForm}>\r\n              <ErrorMessage\r\n                className={styles.errorMessage}\r\n                name=\"email\"\r\n                component=\"div\"\r\n              />\r\n              <Field\r\n                placeholder=\"email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                className={\r\n                  errors.email === undefined\r\n                    ? styles.inputField\r\n                    : styles.errorField\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                className={styles.errorMessage}\r\n                name=\"password\"\r\n                component=\"div\"\r\n              />\r\n              <Field\r\n                placeholder=\"пароль\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                className={\r\n                  errors.password === undefined\r\n                    ? styles.inputField\r\n                    : styles.errorField\r\n                }\r\n              />\r\n              <div className={styles.buttons}>\r\n                <Button type=\"button\" onClick={() => setVisibility('block')}>Реєстрація</Button>\r\n                <Button type=\"submit\" disabled={isSubmitting}>\r\n                  Увійти\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\home\\Home.tsx",["211"],"import React from 'react'\r\n\r\ninterface PT {}\r\n\r\nconst Home: React.FC<PT> = ({}) => {\r\n  return <div>Home</div>\r\n}\r\n\r\nexport default Home;","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\register\\RegisterSkeleton.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\registration\\Registration.tsx",["212","213"],"import React from \"react\";\r\nimport styles from \"./registration.module.css\";\r\nimport {isLoggedVar} from \"../../api/client\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport Button from \"../button/Button\";\r\nimport {useMutation, useQuery} from \"@apollo/client\";\r\nimport {SIGN_UP} from \"../../api/operations/mutations/signUp\";\r\nimport PopupWindow from \"../popupWindow/PopupWindow\";\r\nimport * as Yup from 'yup';\r\nimport {Degree, Department, User, userTypes} from \"../../models/models\";\r\nimport {GET_DEGREES} from \"../../api/operations/queries/degrees\";\r\nimport {GET_DEPARTMENTS} from \"../../api/operations/queries/departments\";\r\nimport {GET_USERS, GET_USERS_EMAIL_AND_PHONE} from \"../../api/operations/queries/users\";\r\nimport Loading from \"../loading/Loading\";\r\n\r\ntype PropTypes = {\r\n  visibility: string;\r\n  onClose: (value: string) => void;\r\n  setIsLogged: (value: boolean) => void;\r\n};\r\n\r\nconst Registration: React.FC<PropTypes> = ({ visibility, onClose, setIsLogged }) => {\r\n  const {data: users, loading: loadingUsers, error: errorUsers} = useQuery(GET_USERS_EMAIL_AND_PHONE)\r\n  const {data: degrees, loading: loadingDegs, error: errorDegs} = useQuery(GET_DEGREES);\r\n  const {data: departments, loading: loadingDeps, error: errorDeps} = useQuery(GET_DEPARTMENTS);\r\n  const fieldsData = [\r\n    {placeholder: \"прізвище\", name: \"lastName\", type: \"text\"},\r\n    {placeholder: \"ім'я\", name: \"firstName\", type: \"text\"},\r\n    {placeholder: \"по-батькві\", name: \"patronymic\", type: \"text\"},\r\n    {placeholder: \"email\", name: \"email\", type: \"email\"},\r\n    {placeholder: \"пароль\", name: \"password\", type: \"password\"},\r\n    {placeholder: \"повторіть пароль\", name: \"passwordConfirm\", type: \"password\"},\r\n    {placeholder: \"телефон\", name: \"phoneNumber\", type: \"text\"},\r\n    {placeholder: \"кафедра\", name: \"department\", type: \"text\"},\r\n    {placeholder: \"ступінь\", name: \"degree\", type: \"text\"},\r\n    {placeholder: \"Рік початку навчання\", name: \"startYear\", type: \"number\"},\r\n  ];\r\n\r\n  const [signUp] = useMutation(SIGN_UP);\r\n  const format = \"Невірний формат\";\r\n  const req = \"Обов'язкове поле\";\r\n  const nameRegExp = /^(?=.{1,20}$)(?![\\s\\-_.'0-9])(?!.*[\\s\\-_.0-9]{2})[а-яА-Яa-zA-Z0-9.іІєЄґҐ \\-']+(?<![\\s\\-_.'0-9])$/\r\n  const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n  const SignupSchema = Yup.object().shape({\r\n    firstName: Yup.string().matches(nameRegExp, format)\r\n      .max(20, \"Не більше 20 символів\")\r\n      .required(req),\r\n    lastName: Yup.string().matches(nameRegExp, format)\r\n      .max(20, \"Не більше 20 символів\")\r\n      .required(req),\r\n    patronymic: Yup.string().matches(nameRegExp, format)\r\n      .max(20, \"Не більше 20 символів\"),\r\n    email: Yup.string().email(format).notOneOf(\r\n        users!==undefined?[...users.users.map((user: User)=>user.email)]:[\"\"],\r\n        \"E-mail адреса зайнята\"\r\n      ).required(req),\r\n    department: Yup.string().required(req),\r\n    phoneNumber: Yup.string().matches(phoneRegExp, 'Невірний формат номеру').notOneOf(\r\n      users!==undefined?[...users.users.map((user: User)=>user.phoneNumber)]:[\"\"],\r\n      \"Телефонний номер зайнятий\"\r\n    ).required(req),\r\n    password: Yup.string().required(req).min(6),\r\n    passwordConfirm: Yup.string().when(\"password\", {\r\n      is: (val: string) => (val && val.length > 0 ? true : false),\r\n      then: Yup.string().oneOf(\r\n        [Yup.ref(\"password\")],\r\n        \"Паролі не співпадають\"\r\n      )\r\n    }),\r\n    degree: Yup.string().default(\"Бакалавр\"),\r\n    startYear: Yup.number().min((new Date().getFullYear())-4).max(new Date().getFullYear())\r\n  })\r\n  if (loadingUsers) return <Loading/>\r\n  else return <PopupWindow headerBody=\"Реєстрація\" onClose={onClose} visibility={visibility}>\r\n    <Formik\r\n      initialValues={{\r\n        firstName: \"\",\r\n        patronymic: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordConfirm: \"\",\r\n        department: !loadingDeps&&!errorDeps?departments.departments[0].name:\"\",\r\n        phoneNumber: \"\",\r\n        degree: !loadingDegs&&!errorDegs?degrees.degrees[0].name:\"\",\r\n        startYear: new Date().getFullYear()\r\n      }}\r\n      validationSchema={SignupSchema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        signUp({\r\n          variables: {\r\n            input: {\r\n              email: values.email,\r\n              phoneNumber: values.phoneNumber,\r\n              extraPhoneNumbers: \"\",\r\n              password: values.password,\r\n              firstName: values.firstName,\r\n              patronymic: values.patronymic,\r\n              lastName: values.lastName,\r\n              department: values.department,\r\n              degree: values.degree,\r\n              startYear: values.startYear,\r\n              type: values.degree==='Бакалавр'||values.degree==='Магістр'?userTypes.STUDENT:userTypes.POST_GRADUATE,\r\n            },\r\n          },\r\n        }).then((r) => {\r\n          sessionStorage.setItem(\"token\", r.data.signup.token);\r\n          sessionStorage.setItem(\"userId\", r.data.signup.user.id);\r\n\r\n        });\r\n        setSubmitting(false);\r\n        isLoggedVar(true);\r\n        setIsLogged(true)\r\n      }}\r\n    >\r\n      {({ isSubmitting, errors , values, handleChange, handleBlur}) => (\r\n        <Form className={styles.inputForm}>\r\n          {fieldsData.map(({placeholder, type, name, })=>\r\n            name===\"degree\"?<div className={styles[name]}>\r\n              <label htmlFor={name}>{placeholder}: <Field name={name} as=\"select\" value={values.degree} onChange={handleChange} onBlur={handleBlur}>\r\n                {!loadingDegs&&!errorDegs?degrees.degrees.map(({name}:Degree)=><option value={name} label={name}/>):\r\n                  <option value=\"...\">...</option>}\r\n              </Field>\r\n              </label>\r\n              <ErrorMessage\r\n                className={styles.errorMessage}\r\n                name={name}\r\n                component=\"span\"\r\n              />\r\n            </div>:name===\"department\"?<div className={styles[name]}>\r\n              <label htmlFor={name}>{placeholder}: <Field name={name} as=\"select\" value={values.department} onChange={handleChange} onBlur={handleBlur}>\r\n                {!loadingDeps&&!errorDeps?departments.departments.map(({name}:Department)=><option value={name} label={name}/>):\r\n                  <option value=\"...\">...</option>}\r\n              </Field></label>\r\n              <ErrorMessage\r\n                className={styles.errorMessage}\r\n                name={name}\r\n                component=\"span\"\r\n              />\r\n            </div>:<div className={styles[name]}>\r\n              <label htmlFor={name}>{placeholder}: <Field\r\n              placeholder={placeholder}\r\n              type={type}\r\n              name={name}\r\n              // className={\r\n              //   errors.email === undefined\r\n              //     ? styles.inputField\r\n              //     : styles.errorField\r\n              // }\r\n              defaultValue=\"def\"\r\n              /></label>\r\n              <ErrorMessage\r\n                className={styles.errorMessage}\r\n                name={name}\r\n                component=\"span\"\r\n              />\r\n          </div>)}\r\n          <div className={styles.buttons}>\r\n            <Button type=\"reset\">Очистити</Button>\r\n            <Button type=\"submit\" disabled={isSubmitting}>\r\n              Зареєструватися\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  </PopupWindow>\r\n};\r\n\r\nexport default Registration;\r\n","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\gridElement\\GridElement.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\filters\\Filters.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\gridElement\\GridElementSkeleton.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\caviar\\Caviar.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\popupClassroom\\PopupClassroom.tsx",["214","215","216"],"import React, {useState} from \"react\";\r\nimport {Classroom, OccupiedInfo} from \"../../models/models\";\r\nimport styles from \"./popupClassroom.module.css\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport Tag from \"../tag/Tag\";\r\nimport ClassroomSchedule from \"../classroomSchedule/ClassroomSchedule\";\r\nimport Instrument from \"../instrument/Instrument\";\r\nimport OccupationInfo from \"./occupationInfo/OccupationInfo\";\r\nimport OccupantRegistration from \"./occupantRegistration/OccupantRegistration\";\r\nimport PopupWindow from \"../popupWindow/PopupWindow\";\r\nimport {useQuery} from \"@apollo/client\";\r\nimport {GET_USERS} from \"../../api/operations/queries/users\";\r\n\r\ninterface PropTypes {\r\n  classrooms: Array<Classroom>;\r\n  visibility: string;\r\n  onClose: (value: string) => void;\r\n  readyForRewriting: boolean;\r\n  setReadyForRewriting: (value: boolean) => void;\r\n}\r\n\r\ninterface ParamTypes {\r\n  classroomId: string;\r\n}\r\n\r\nconst PopupClassroom: React.FC<PropTypes> = (\r\n  {\r\n    classrooms,\r\n    visibility,\r\n    onClose,\r\n    readyForRewriting,\r\n    setReadyForRewriting\r\n  }) => {\r\n  let {classroomId} = useParams<ParamTypes>();\r\n  if (classroomId === undefined) classroomId = \"1\";\r\n  const classroom = classrooms.find(\r\n    (classroom) => classroom.name === classroomId\r\n  ) as Classroom;\r\n  const {name, chair, isWing, isOperaStudio, special, schedule, instruments, occupied} = classroom;\r\n  const headerBody = <>\r\n    {\"Аудиторія №\" +\r\n    name +\r\n    (chair !== null\r\n      ? \" — \" + chair\r\n      : \"\")}\r\n    {isWing ? <Tag text=\"Флігель\"/> : null}\r\n    {isOperaStudio ? <Tag text=\"Оперна студія\"/> : null}\r\n    {special ? <Tag text=\"Спеціалізована (ф-но)\"/> : null}\r\n  </>\r\n\r\n  return <PopupWindow headerBody={headerBody} onClose={onClose} visibility={visibility}>\r\n    <ClassroomSchedule schedule={schedule}/>\r\n    <div\r\n      className={\r\n        instruments.length !== 0 ? styles.instruments : \"\"\r\n      }\r\n    >\r\n      {instruments.map((instrument) => (\r\n        <Instrument\r\n          key={instrument.id}\r\n          withName\r\n          instrument={instrument}\r\n        />\r\n      ))}\r\n    </div>\r\n    {occupied ? readyForRewriting ? <OccupantRegistration\r\n      classroom={classroom}\r\n      onClose={onClose}\r\n    /> : (\r\n      <OccupationInfo\r\n        occupied={occupied as OccupiedInfo}\r\n        classroom={classroom}\r\n        onClose={onClose}\r\n        setReadyForRewriting={(value) => setReadyForRewriting(value)}\r\n      />\r\n    ) : (\r\n      <OccupantRegistration\r\n        classroom={classroom}\r\n        onClose={onClose}\r\n      />\r\n    )}\r\n  </PopupWindow>\r\n};\r\n\r\nexport default PopupClassroom;\r\n","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\popupClassroom\\occupationInfo\\OccupationInfo.tsx",["217","218"],"import React, {useState} from \"react\";\r\nimport {\r\n  Classroom,\r\n  OccupiedInfo,\r\n  userTypeColors,\r\n  userTypes,\r\n  userTypesUa,\r\n} from \"../../../models/models\";\r\nimport styles from \"./occupationInfo.module.css\";\r\nimport {getTimeHHMM} from \"../../../helpers/helpers\";\r\nimport Button from \"../../button/Button\";\r\nimport {useMutation} from \"@apollo/client\";\r\nimport {FREE_CLASSROOM} from \"../../../api/operations/mutations/freeClassroom\";\r\nimport UserPopup from \"../../user/UserPopup\";\r\nimport {gridUpdate} from \"../../../api/client\";\r\n\r\ntype PropTypes = {\r\n  occupied: OccupiedInfo;\r\n  classroom: Classroom;\r\n  onClose: (value: string) => void;\r\n  setReadyForRewriting: (value: boolean) => void;\r\n};\r\n\r\nconst OccupationInfo: React.FC<PropTypes> = ({occupied, classroom, onClose, setReadyForRewriting}) => {\r\n  const [freeClassroom, {data, error}] = useMutation(FREE_CLASSROOM, {\r\n    variables: {\r\n      input: {\r\n        classroomName: String(classroom.name),\r\n      },\r\n    },\r\n    update(cache, {data}) {\r\n      cache.modify({\r\n        fields: {\r\n          classrooms(existingRelay, {toReference}) {\r\n            const freedClassroomIndex = existingRelay.findIndex(\r\n              (el: Classroom) => el.id === classroom.id\r\n            );\r\n\r\n            return existingRelay\r\n              .slice()\r\n              .splice(freedClassroomIndex, 1, {...classroom, occupied: data.freeClassroom.classroom.occupied});\r\n          },\r\n        },\r\n      });\r\n    },\r\n  });\r\n  const fullName =\r\n    occupied?.user.nameTemp === null\r\n      ? [\r\n        occupied?.user.lastName,\r\n        occupied?.user.firstName.charAt(0) + \".\",\r\n        occupied?.user.patronymic?.charAt(0) + \".\",\r\n      ].join(\" \")\r\n      : occupied?.user.nameTemp;\r\n  const [visibility, setVisibility] = useState(\"none\");\r\n  return (\r\n    <div>\r\n      <UserPopup visibility={visibility} onClose={() => setVisibility(\"none\")} userData={occupied?.user}/>\r\n      <div className={styles.occupationInfo}>\r\n        <Button\r\n          onClick={() => setVisibility(\"block\")}\r\n          style={{\r\n            backgroundColor: userTypeColors[occupied.user.type as userTypes],\r\n          }}\r\n        >\r\n          {[fullName, \"— \", userTypesUa[occupied.user.type as userTypes]].join(\r\n            \" \"\r\n          )}\r\n        </Button>\r\n        {(occupied.user.type === userTypes.STUDENT || occupied.user.type===userTypes.POST_GRADUATE)&&\r\n        <div className={styles.until}>\r\n          Зайнято до {getTimeHHMM(new Date(occupied.until))}\r\n        </div>}\r\n        <div className={styles.buttons}>\r\n          <Button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              setReadyForRewriting(true)\r\n            }}\r\n          >\r\n            Передати аудиторію\r\n          </Button>\r\n          <Button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              freeClassroom().then(() => {\r\n                gridUpdate(!gridUpdate())\r\n                onClose(\"none\")\r\n              });\r\n            }}\r\n          >\r\n            Звільнити аудиторію\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OccupationInfo;\r\n","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\popupClassroom\\occupantRegistration\\OccupantRegistration.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\classrooms\\ClassroomGridConrainer.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\classrooms\\ClassroomsGrid.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\classrooms\\ClassroomsGridSkeleton.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\alert\\Alert.tsx",[],{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"219","replacedBy":"223"},{"ruleId":"221","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":2,"column":8,"nodeType":"227","messageId":"228","endLine":2,"endColumn":14},{"ruleId":"225","severity":1,"message":"229","line":1,"column":16,"nodeType":"227","messageId":"228","endLine":1,"endColumn":29},{"ruleId":"225","severity":1,"message":"226","line":2,"column":8,"nodeType":"227","messageId":"228","endLine":2,"endColumn":14},{"ruleId":"230","severity":1,"message":"231","line":9,"column":39,"nodeType":"232","messageId":"233","endLine":9,"endColumn":41},{"ruleId":"234","severity":1,"message":"235","line":29,"column":6,"nodeType":"236","endLine":29,"endColumn":18,"suggestions":"237"},{"ruleId":"225","severity":1,"message":"238","line":8,"column":18,"nodeType":"227","messageId":"228","endLine":8,"endColumn":27},{"ruleId":"225","severity":1,"message":"239","line":16,"column":11,"nodeType":"227","messageId":"228","endLine":16,"endColumn":17},{"ruleId":"240","severity":1,"message":"241","line":54,"column":57,"nodeType":"242","messageId":"243","endLine":54,"endColumn":59},{"ruleId":"230","severity":1,"message":"231","line":5,"column":29,"nodeType":"232","messageId":"233","endLine":5,"endColumn":31},{"ruleId":"225","severity":1,"message":"244","line":13,"column":9,"nodeType":"227","messageId":"228","endLine":13,"endColumn":18},{"ruleId":"225","severity":1,"message":"245","line":23,"column":53,"nodeType":"227","messageId":"228","endLine":23,"endColumn":63},{"ruleId":"225","severity":1,"message":"246","line":1,"column":16,"nodeType":"227","messageId":"228","endLine":1,"endColumn":24},{"ruleId":"225","severity":1,"message":"247","line":11,"column":9,"nodeType":"227","messageId":"228","endLine":11,"endColumn":17},{"ruleId":"225","severity":1,"message":"244","line":12,"column":9,"nodeType":"227","messageId":"228","endLine":12,"endColumn":18},{"ruleId":"225","severity":1,"message":"248","line":25,"column":26,"nodeType":"227","messageId":"228","endLine":25,"endColumn":30},{"ruleId":"225","severity":1,"message":"249","line":25,"column":32,"nodeType":"227","messageId":"228","endLine":25,"endColumn":37},"no-native-reassign",["250"],"no-negated-in-lhs",["251"],["250"],["251"],"@typescript-eslint/no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'ReactFragment' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getClassrooms'. Either include it or remove the dependency array.","ArrayExpression",["252"],"'useParams' is defined but never used.","'Params' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'GET_USERS' is defined but never used.","'errorUsers' is assigned a value but never used.","'useState' is defined but never used.","'useQuery' is defined but never used.","'data' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"253","fix":"254"},"Update the dependencies array to be: [getClassrooms, gridUpdate]",{"range":"255","text":"256"},[1214,1226],"[getClassrooms, gridUpdate]"]