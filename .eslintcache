[{"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\index.tsx":"1","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\reportWebVitals.ts":"2","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\client.ts":"3","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\App.tsx":"4","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\classrooms.ts":"5","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\sidebar\\Sidebar.tsx":"6","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\users.ts":"7","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\register.ts":"8","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\helpers\\constants.ts":"9","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\helpers\\helpers.ts":"10","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\models\\models.ts":"11","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\login.ts":"12","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\button\\Button.tsx":"13","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\instrument\\Instrument.tsx":"14","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\tag\\Tag.tsx":"15","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\classroomSchedule\\ClassroomSchedule.tsx":"16","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\occupyClassroom.ts":"17","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\freeClassroom.ts":"18","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\user\\UserPopup.tsx":"19","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\pageHeader\\PageHeader.tsx":"20","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\adminPanel\\AdminPanel.tsx":"21","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\signUp.ts":"22","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\popupWindow\\PopupWindow.tsx":"23","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\loading\\Loading.tsx":"24","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\error\\Error.tsx":"25","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\degrees.ts":"26","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\departments.ts":"27","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\users\\Users.tsx":"28","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\schedule\\Schedule.tsx":"29","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\register\\Register.tsx":"30","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\profile\\Profile.tsx":"31","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\login\\Login.tsx":"32","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\home\\Home.tsx":"33","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\register\\RegisterSkeleton.tsx":"34","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\registration\\Registration.tsx":"35","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\gridElement\\GridElement.tsx":"36","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\filters\\Filters.tsx":"37","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\gridElement\\GridElementSkeleton.tsx":"38","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\caviar\\Caviar.tsx":"39","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\popupClassroom\\PopupClassroom.tsx":"40","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\popupClassroom\\occupationInfo\\OccupationInfo.tsx":"41","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\popupClassroom\\occupantRegistration\\OccupantRegistration.tsx":"42","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\classrooms\\ClassroomGridConrainer.tsx":"43","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\classrooms\\ClassroomsGrid.tsx":"44","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\classrooms\\ClassroomsGridSkeleton.tsx":"45","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\alert\\Alert.tsx":"46","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\AppContainer.tsx":"47","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\me.ts":"48","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\popupClassroom\\disableClassroomButton\\DisableClassroomButton.tsx":"49","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\disableClassroom.ts":"50","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\enableClassroom.ts":"51","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\verificationMessage\\VerificationMessage.tsx":"52","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\verifyUser.ts":"53","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\popupMessage\\PopupMessage.tsx":"54","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\loadingSplash\\LoadingSplash.tsx":"55"},{"size":775,"mtime":1611493450930,"results":"56","hashOfConfig":"57"},{"size":425,"mtime":499162500000,"results":"58","hashOfConfig":"57"},{"size":769,"mtime":1610921243088,"results":"59","hashOfConfig":"57"},{"size":2427,"mtime":1611678947511,"results":"60","hashOfConfig":"57"},{"size":1297,"mtime":1611582214518,"results":"61","hashOfConfig":"57"},{"size":3145,"mtime":1611493990852,"results":"62","hashOfConfig":"57"},{"size":994,"mtime":1611605690568,"results":"63","hashOfConfig":"57"},{"size":560,"mtime":1610301444679,"results":"64","hashOfConfig":"57"},{"size":191,"mtime":1608928245188,"results":"65","hashOfConfig":"57"},{"size":1695,"mtime":1610814084416,"results":"66","hashOfConfig":"57"},{"size":3203,"mtime":1611599984168,"results":"67","hashOfConfig":"57"},{"size":517,"mtime":1609100490613,"results":"68","hashOfConfig":"57"},{"size":503,"mtime":1610157609582,"results":"69","hashOfConfig":"57"},{"size":675,"mtime":1611494496340,"results":"70","hashOfConfig":"57"},{"size":244,"mtime":1609589754253,"results":"71","hashOfConfig":"57"},{"size":910,"mtime":1608928254118,"results":"72","hashOfConfig":"57"},{"size":847,"mtime":1610280818260,"results":"73","hashOfConfig":"57"},{"size":465,"mtime":1610301243756,"results":"74","hashOfConfig":"57"},{"size":2835,"mtime":1611674751234,"results":"75","hashOfConfig":"57"},{"size":279,"mtime":1611497413614,"results":"76","hashOfConfig":"57"},{"size":290,"mtime":1611497339650,"results":"77","hashOfConfig":"57"},{"size":356,"mtime":1609100464962,"results":"78","hashOfConfig":"57"},{"size":871,"mtime":1611612962891,"results":"79","hashOfConfig":"57"},{"size":461,"mtime":1611497391226,"results":"80","hashOfConfig":"57"},{"size":458,"mtime":1610823933611,"results":"81","hashOfConfig":"57"},{"size":229,"mtime":1610723937608,"results":"82","hashOfConfig":"57"},{"size":183,"mtime":1611508664712,"results":"83","hashOfConfig":"57"},{"size":8917,"mtime":1611676274348,"results":"84","hashOfConfig":"57"},{"size":5362,"mtime":1611582037782,"results":"85","hashOfConfig":"57"},{"size":9578,"mtime":1611612369536,"results":"86","hashOfConfig":"57"},{"size":1905,"mtime":1611485890235,"results":"87","hashOfConfig":"57"},{"size":4915,"mtime":1611497604091,"results":"88","hashOfConfig":"57"},{"size":135,"mtime":1611497517011,"results":"89","hashOfConfig":"57"},{"size":577,"mtime":1609694742314,"results":"90","hashOfConfig":"57"},{"size":9695,"mtime":1611497484402,"results":"91","hashOfConfig":"57"},{"size":4764,"mtime":1611593998624,"results":"92","hashOfConfig":"57"},{"size":487,"mtime":1609587048875,"results":"93","hashOfConfig":"57"},{"size":471,"mtime":1609503809772,"results":"94","hashOfConfig":"57"},{"size":986,"mtime":1610822686369,"results":"95","hashOfConfig":"57"},{"size":4456,"mtime":1611599539670,"results":"96","hashOfConfig":"57"},{"size":3465,"mtime":1611612369562,"results":"97","hashOfConfig":"57"},{"size":9202,"mtime":1611490282032,"results":"98","hashOfConfig":"57"},{"size":2689,"mtime":1611595693784,"results":"99","hashOfConfig":"57"},{"size":3644,"mtime":1611512195672,"results":"100","hashOfConfig":"57"},{"size":663,"mtime":1610822686395,"results":"101","hashOfConfig":"57"},{"size":549,"mtime":1610900530852,"results":"102","hashOfConfig":"57"},{"size":3030,"mtime":1611678870740,"results":"103","hashOfConfig":"57"},{"size":125,"mtime":1611573949040,"results":"104","hashOfConfig":"57"},{"size":3648,"mtime":1611599742660,"results":"105","hashOfConfig":"57"},{"size":430,"mtime":1611585639256,"results":"106","hashOfConfig":"57"},{"size":343,"mtime":1611585639250,"results":"107","hashOfConfig":"57"},{"size":1739,"mtime":1611603163748,"results":"108","hashOfConfig":"57"},{"size":649,"mtime":1611610085030,"results":"109","hashOfConfig":"57"},{"size":908,"mtime":1611676073407,"results":"110","hashOfConfig":"57"},{"size":387,"mtime":1611678931279,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"jcqp8",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"114"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"114"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"114"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\index.tsx",[],["227","228"],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\reportWebVitals.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\client.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\App.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\classrooms.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\sidebar\\Sidebar.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\users.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\register.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\helpers\\constants.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\helpers\\helpers.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\models\\models.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\login.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\button\\Button.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\instrument\\Instrument.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\tag\\Tag.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\classroomSchedule\\ClassroomSchedule.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\occupyClassroom.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\freeClassroom.ts",[],["229","230"],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\user\\UserPopup.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\pageHeader\\PageHeader.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\adminPanel\\AdminPanel.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\signUp.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\popupWindow\\PopupWindow.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\loading\\Loading.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\error\\Error.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\degrees.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\departments.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\users\\Users.tsx",["231"],"import React, { useState } from \"react\";\r\nimport { User, userTypes, userTypesUa } from \"../../models/models\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_USERS } from \"../../api/operations/queries/users\";\r\nimport styles from \"./users.module.css\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport UserPopup from \"../../components/user/UserPopup\";\r\nimport PageHeader from \"../../components/pageHeader/PageHeader\";\r\nimport Loading from \"../../components/loading/Loading\";\r\nimport Error from \"../../components/error/Error\";\r\nimport Alert from \"../../components/alert/Alert\";\r\nimport PopupMessage from \"../../components/popupMessage/PopupMessage\";\r\n\r\ninterface Params {\r\n  userId: string;\r\n}\r\n\r\ninterface PT {\r\n  meType: string;\r\n}\r\n\r\nconst Users: React.FC<PT> = ({ meType }) => {\r\n  const { loading, error, data } = useQuery(GET_USERS);\r\n  const { userId } = useParams<Params>();\r\n  const [visibility, setVisibility] = useState(\"none\");\r\n  const [popupVisibility, setPopupVisibility] = useState(\"none\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const [userSearch, setUserSearch] = useState(\"\");\r\n  const [sortBy, setSortBy] = useState(\"AZ\");\r\n  const [userTypes, setUserTypes] = useState(\"ALL\");\r\n  if (loading) return <Loading />;\r\n  if (error) return <Error />;\r\n  const pages = Math.ceil(data.users.length / pageSize);\r\n  let pagesList: number[] = [];\r\n  for (let i = 1; i <= pages; i++) {\r\n    pagesList.push(i);\r\n  }\r\n\r\n  const onClosePopup = () => {\r\n    setPopupVisibility(\"none\");\r\n  };\r\n\r\n  const onCloseUserPopup = () => {\r\n    setVisibility(\"none\");\r\n    setPopupVisibility(\"block\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PopupMessage\r\n        headerBody=\"Верифікація успішна!\"\r\n        onClose={onClosePopup}\r\n        visibility={popupVisibility}\r\n      />\r\n      {userId && (\r\n        <UserPopup onClose={onCloseUserPopup} visibility={visibility} meType={meType} />\r\n      )}\r\n      <PageHeader body=\"Користувачі\">\r\n        <select\r\n          className={styles.usersSort}\r\n          name=\"usersSort\"\r\n          id=\"usersSort\"\r\n          onChange={(e) => {\r\n            setSortBy(e.target.value);\r\n            setCurrentPage(1);\r\n          }}\r\n        >\r\n          <option value=\"AZ\">А - Я</option>\r\n          <option value=\"ZA\">Я - А</option>\r\n          <option value=\"ID_UP\">ID &#8593;</option>\r\n          <option value=\"ID_DOWN\">ID &#8595;</option>\r\n        </select>\r\n      </PageHeader>\r\n      <ul>\r\n        <li className={[styles.usersUnitList, styles.listHeader].join(\" \")}>\r\n          <div>ID</div>\r\n          <div>\r\n            П.І.Б.{\" \"}\r\n            {\r\n              <input\r\n                className={styles.userSearch}\r\n                type=\"text\"\r\n                placeholder=\"Пошук (П.І.Б. або ID)\"\r\n                value={userSearch}\r\n                onChange={(e) => {\r\n                  setUserSearch(e.target.value);\r\n                  setCurrentPage(1);\r\n                }}\r\n              />\r\n            }\r\n          </div>\r\n          <div>\r\n            <select\r\n              className={styles.userTypes}\r\n              name=\"userTypes\"\r\n              id=\"userTypes\"\r\n              value={userTypes}\r\n              onChange={(e) => {\r\n                setUserTypes(e.target.value);\r\n                setCurrentPage(1);\r\n              }}\r\n            >\r\n              <option value=\"ALL\">Всі</option>\r\n              {meType === \"ADMIN\" ? (\r\n                <option value=\"STUDENT\">Студенти</option>\r\n              ) : null}\r\n              <option value=\"TEACHER\">Викладачі</option>\r\n              {meType === \"ADMIN\" ? (\r\n                <option value=\"POST_GRADUATE\">Асистенти/Аспіранти</option>\r\n              ) : null}\r\n              <option value=\"ILLUSTRATOR\">Іллюстратори</option>\r\n              <option value=\"CONCERTMASTER\">Концертмейстери</option>\r\n            </select>\r\n          </div>\r\n        </li>\r\n        {data.users\r\n          .slice()\r\n          .filter((user: User) => {\r\n            if (meType === \"ADMIN\") return true;\r\n            else {\r\n              if (user.type === \"POST_GRADUATE\" || user.type === \"STUDENT\")\r\n                return false;\r\n              else return true;\r\n            }\r\n          })\r\n          .filter((user: User) => {\r\n            if (userTypes === \"ALL\") return true;\r\n            return user.type === userTypes;\r\n          })\r\n          .sort((a: any, b: any) => {\r\n            let aFullname = [a.lastName, a.firstName, a.patronymic].join();\r\n            let bFullname = [b.lastName, b.firstName, b.patronymic].join();\r\n            return sortBy === \"AZ\"\r\n              ? aFullname.localeCompare(bFullname)\r\n              : sortBy === \"ZA\"\r\n              ? bFullname.localeCompare(aFullname)\r\n              : sortBy === \"ID_UP\"\r\n              ? a.id - b.id\r\n              : b.id - a.id;\r\n          })\r\n          .filter((user: any) => {\r\n            return (\r\n              [user.lastName, user.firstName, user.patronymic, user.id]\r\n                .join(\" \")\r\n                .indexOf(userSearch) !== -1\r\n            );\r\n          })\r\n          .slice(\r\n            currentPage === 1 ? 0 : currentPage * pageSize - pageSize,\r\n            currentPage * pageSize + pageSize - pageSize\r\n          )\r\n          .map((user: any) => (\r\n            <li key={user.id} className={styles.usersUnitList}>\r\n              <div>{user.id}</div>\r\n              <div className={styles.userLink}>\r\n                <NavLink\r\n                  onClick={() => setVisibility(\"block\")}\r\n                  to={\"/users/\" + user.id}\r\n                >\r\n                  {[user.lastName, user.firstName, user.patronymic].join(\" \")}\r\n                  {meType === \"ADMIN\" && !user.verified ? (\r\n                    <span className={styles.notVerified}>Не верифіковано</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </NavLink>\r\n              </div>\r\n              <div>{userTypesUa[user.type as userTypes]}</div>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n\r\n      <div className={styles.footer}>\r\n        <div>\r\n          <ul className={styles.paginator}>\r\n            <li\r\n              style={\r\n                currentPage === 1\r\n                  ? { color: \"#ccc\", border: \"1px solid #ccc\" }\r\n                  : {}\r\n              }\r\n              onClick={() => {\r\n                currentPage >= 2\r\n                  ? setCurrentPage((prevState) => prevState - 1)\r\n                  : setCurrentPage(1);\r\n              }}\r\n            >\r\n              &lt;\r\n            </li>\r\n            {currentPage >= 4 && (\r\n              <>\r\n                <li onClick={() => setCurrentPage(1)}>1</li>\r\n                <span className={styles.paginatorDots}>...</span>\r\n              </>\r\n            )}\r\n            {pagesList\r\n              .filter(\r\n                (pageNumber: number) =>\r\n                  pageNumber < currentPage + 3 && pageNumber > currentPage - 3\r\n              )\r\n              .map((pageNumber: number) => (\r\n                <li\r\n                  key={pageNumber}\r\n                  onClick={() => setCurrentPage(pageNumber)}\r\n                  style={\r\n                    pageNumber === currentPage\r\n                      ? {\r\n                          backgroundColor: \"#1e2c4f\",\r\n                          color: \"#fff\",\r\n                        }\r\n                      : undefined\r\n                  }\r\n                >\r\n                  {pageNumber}\r\n                </li>\r\n              ))}\r\n            {currentPage < pages - 2 && (\r\n              <>\r\n                <span className={styles.paginatorDots}>...</span>\r\n                <li onClick={() => setCurrentPage(pages)}>{pages}</li>\r\n              </>\r\n            )}\r\n            <li\r\n              style={\r\n                currentPage === pages\r\n                  ? { color: \"#ccc\", border: \"1px solid #ccc\" }\r\n                  : {}\r\n              }\r\n              onClick={() => {\r\n                currentPage <= pages - 1\r\n                  ? setCurrentPage((prevState) => prevState + 1)\r\n                  : setCurrentPage(pages);\r\n              }}\r\n            >\r\n              &gt;\r\n            </li>\r\n          </ul>\r\n          <select\r\n            className={styles.selectPageSize}\r\n            name=\"pageSize\"\r\n            id=\"pageSize\"\r\n            onChange={(e) => {\r\n              setPageSize(Number(e.target.value));\r\n              setCurrentPage(1);\r\n            }}\r\n          >\r\n            <option value=\"10\">10 / ст.</option>\r\n            <option value=\"20\">20 / ст.</option>\r\n            <option value=\"50\">50 / ст.</option>\r\n            <option value=\"100\">100 / ст.</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\schedule\\Schedule.tsx",["232"],"import React, { useEffect, useState } from \"react\";\nimport styles from \"./schedule.module.css\";\nimport { getScheduleTimeline } from \"../../helpers/helpers\";\nimport { WORKING_DAY_END, WORKING_DAY_START } from \"../../helpers/constants\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { GET_CLASSROOMS_SCHEDULE } from \"../../api/operations/queries/classrooms\";\nimport { Classroom, ScheduleUnit } from \"../../models/models\";\nimport PageHeader from \"../../components/pageHeader/PageHeader\";\nimport Loading from \"../../components/loading/Loading\";\nimport { client } from \"../../api/client\";\n\nconst Schedule = () => {\n  const [classrooms, setClassrooms] = useState<Array<Classroom>>();\n  const [scheduleDate, setScheduleDate] = useState(new Date());\n  const timelineMarks = [\n    \"8:00\",\n    \"9:00\",\n    \"10:00\",\n    \"11:00\",\n    \"12:00\",\n    \"13:00\",\n    \"14:00\",\n    \"15:00\",\n    \"16:00\",\n    \"17:00\",\n    \"18:00\",\n    \"19:00\",\n    \"20:00\",\n  ];\n  const toDateInputValue = (date: Date) => {\n    date.setMinutes(date.getMinutes() - date.getTimezoneOffset());\n    return date.toJSON().slice(0, 10);\n  };\n  const { data: gridUpdate } = useQuery(gql`\n    query gridUpdate {\n      gridUpdate @client\n    }\n  `);\n\n  const getClassrooms = async () => {\n    const {\n      data: { classrooms },\n    } = await client.query({\n      query: GET_CLASSROOMS_SCHEDULE,\n      variables: {\n        date: new Date(scheduleDate).setHours(0, 0, 0, 0),\n      },\n      fetchPolicy: \"cache-first\",\n    });\n    setClassrooms(\n      classrooms\n        .slice()\n        .sort((a: Classroom, b: Classroom) => Number(a.name) - Number(b.name))\n    );\n  };\n  useEffect(() => {\n    getClassrooms();\n  }, [gridUpdate, scheduleDate]);\n\n  let timeSnippets: string[] = getScheduleTimeline(\n    WORKING_DAY_START,\n    WORKING_DAY_END\n  );\n  return (\n    <>\n      <PageHeader body=\"Розклад\">\n        <input\n          className={styles.scheduleDateInput}\n          type=\"date\"\n          onChange={(e) => setScheduleDate(new Date(e.target.value))}\n          defaultValue={toDateInputValue(new Date())}\n        />\n      </PageHeader>\n      {classrooms !== undefined ? (\n        <div className={styles.scheduleTable}>\n          <table className={styles.tg}>\n            <thead>\n              <tr>\n                <th></th>\n                {timeSnippets.map((el: any) => (\n                  <th className={styles.tg_0pky} key={el}>\n                    {timelineMarks.map((mark) => (el === mark ? el : null))}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {(classrooms as Array<Classroom>).map((cl: any) => {\n                let tempArray = timeSnippets;\n                cl.schedule.map((scheduleUnit: any) => {\n                  let unitFrom = timeSnippets.findIndex(\n                    (el: string) => el === scheduleUnit.from\n                  );\n                  let unitTo = timeSnippets.findIndex(\n                    (el: string) => el === scheduleUnit.to\n                  );\n                  tempArray.fill(\"del\", unitFrom + 1, unitTo);\n                  return null;\n                });\n                return (\n                  <tr className={styles.classroomRow} key={cl.id}>\n                    <td className={styles.classroomName}>{cl.name}</td>\n                    {tempArray.map((el: any) => {\n                      let colSpanNum = cl.schedule.map(\n                        (scheduleUnit: ScheduleUnit) => {\n                          let from = timeSnippets.indexOf(scheduleUnit.from);\n                          let to = timeSnippets.indexOf(scheduleUnit.to);\n                          let term = to - from;\n                          if (scheduleUnit.from === el) {\n                            return term.toString();\n                          } else {\n                            return null;\n                          }\n                        }\n                      );\n                      return el !== \"del\" ? (\n                        <td\n                          key={el}\n                          className={styles.tg_0lax}\n                          colSpan={colSpanNum.join().replace(\",\", \"\")}\n                        >\n                          {cl.schedule.map((scheduleUnit: ScheduleUnit) => {\n                            if (scheduleUnit.from === el) {\n                              return (\n                                <div\n                                  className={styles.occupied}\n                                  key={scheduleUnit.id}\n                                >\n                                  <p>\n                                    {scheduleUnit.user.lastName +\n                                      \" \" +\n                                      scheduleUnit.from +\n                                      \" — \" +\n                                      scheduleUnit.to}\n                                  </p>\n                                </div>\n                              );\n                            }\n                            return null;\n                          })}\n                        </td>\n                      ) : null;\n                    })}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </>\n  );\n};\n\nexport default Schedule;\n","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\register\\Register.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\profile\\Profile.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\login\\Login.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\home\\Home.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\register\\RegisterSkeleton.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\registration\\Registration.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\gridElement\\GridElement.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\filters\\Filters.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\gridElement\\GridElementSkeleton.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\caviar\\Caviar.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\popupClassroom\\PopupClassroom.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\popupClassroom\\occupationInfo\\OccupationInfo.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\popupClassroom\\occupantRegistration\\OccupantRegistration.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\classrooms\\ClassroomGridConrainer.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\classrooms\\ClassroomsGrid.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\classrooms\\ClassroomsGridSkeleton.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\alert\\Alert.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\AppContainer.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\me.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\popupClassroom\\disableClassroomButton\\DisableClassroomButton.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\disableClassroom.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\mutations\\enableClassroom.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\verificationMessage\\VerificationMessage.tsx",["233","234"],"import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./verificationMessage.module.css\";\r\nimport Button from \"../../components/button/Button\";\r\nimport { client } from \"../../api/client\";\r\nimport { GET_USER_BY_ID } from \"../../api/operations/queries/users\";\r\n\r\nconst VerificationMessage = () => {\r\n  const [userName, setUserName] = useState('')\r\n  const getUser = async () => {\r\n    const { data, loading, error } = await client.query({\r\n      query: GET_USER_BY_ID,\r\n      variables: {\r\n        id: Number(sessionStorage.getItem(\"userId\")),\r\n      },\r\n    });\r\n    setUserName(data.user.firstName)\r\n  };\r\n  useEffect(() => {\r\n    getUser();\r\n  });\r\n  return (\r\n    <div className={styles.verificationMessage}>\r\n      <div className={styles.verificationMessageBody}>\r\n        <h2>{userName}, вітаємо! Реєстрація пройшла успішно!</h2>\r\n        <p>Для користування програмою необхідно підтвердити свої дані.</p>\r\n        <p>\r\n          Пройти верифікацію Ви можете на другому поверсі НМАУ в учбовій\r\n          частині.\r\n        </p>\r\n        <p>\r\n          Щоб підтвердити дані, вкажіть диспетчеру свій номер користувача.\r\n        </p>\r\n        <h1>\r\n          Ваш номер: <span>{sessionStorage.getItem(\"userId\")}</span>\r\n        </h1>\r\n        <p>Після підтвердження перезавантажте сторінку.</p>\r\n        <Button onClick={()=>sessionStorage.removeItem('userId')}>Вийти з аккаунту</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerificationMessage;\r\n","C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\api\\operations\\queries\\verifyUser.ts",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\components\\popupMessage\\PopupMessage.tsx",[],"C:\\Users\\Ivan\\Desktop\\auditorium v3 git\\auditorium-web-client-v3\\src\\pages\\loadingSplash\\LoadingSplash.tsx",[],{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"235","replacedBy":"239"},{"ruleId":"237","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":11,"column":8,"nodeType":"243","messageId":"244","endLine":11,"endColumn":13},{"ruleId":"245","severity":1,"message":"246","line":58,"column":6,"nodeType":"247","endLine":58,"endColumn":32,"suggestions":"248"},{"ruleId":"241","severity":1,"message":"249","line":10,"column":19,"nodeType":"243","messageId":"244","endLine":10,"endColumn":26},{"ruleId":"241","severity":1,"message":"250","line":10,"column":28,"nodeType":"243","messageId":"244","endLine":10,"endColumn":33},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],["251"],["252"],"@typescript-eslint/no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getClassrooms'. Either include it or remove the dependency array.","ArrayExpression",["253"],"'loading' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},"Update the dependencies array to be: [getClassrooms, gridUpdate, scheduleDate]",{"range":"256","text":"257"},[1685,1711],"[getClassrooms, gridUpdate, scheduleDate]"]